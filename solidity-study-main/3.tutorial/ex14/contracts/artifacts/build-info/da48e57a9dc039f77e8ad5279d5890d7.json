{
	"id": "da48e57a9dc039f77e8ad5279d5890d7",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"solidity-study-main/3.tutorial/ex14/contracts/Assert.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\n\n// require 구문과 비슷한데, 조건만 체크할 때 사용\ncontract Assert{\n  mapping(address=>uint) private orderList;\n\n  function order() external payable {\n    assert(msg.value != 0); // 조건이 fail인 경우, Error를 발생시키고, Transaction으로 인해 지금 까지 변경된 state를 rollback\n    orderList[msg.sender] = msg.value; // require 조건이 참인경우 실행. \n  }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"solidity-study-main/3.tutorial/ex14/contracts/Assert.sol": {
				"Assert": {
					"abi": [
						{
							"inputs": [],
							"name": "order",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"solidity-study-main/3.tutorial/ex14/contracts/Assert.sol\":124:461  contract Assert{... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"solidity-study-main/3.tutorial/ex14/contracts/Assert.sol\":124:461  contract Assert{... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xbf15071d\n      eq\n      tag_2\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"solidity-study-main/3.tutorial/ex14/contracts/Assert.sol\":188:459  function order() external payable {... */\n    tag_2:\n      tag_3\n      tag_4\n      jump\t// in\n    tag_3:\n      stop\n    tag_4:\n        /* \"solidity-study-main/3.tutorial/ex14/contracts/Assert.sol\":248:249  0 */\n      0x00\n        /* \"solidity-study-main/3.tutorial/ex14/contracts/Assert.sol\":235:244  msg.value */\n      callvalue\n        /* \"solidity-study-main/3.tutorial/ex14/contracts/Assert.sol\":235:249  msg.value != 0 */\n      sub\n        /* \"solidity-study-main/3.tutorial/ex14/contracts/Assert.sol\":228:250  assert(msg.value != 0) */\n      tag_6\n      jumpi\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n    tag_6:\n        /* \"solidity-study-main/3.tutorial/ex14/contracts/Assert.sol\":402:411  msg.value */\n      callvalue\n        /* \"solidity-study-main/3.tutorial/ex14/contracts/Assert.sol\":378:387  orderList */\n      0x00\n        /* \"solidity-study-main/3.tutorial/ex14/contracts/Assert.sol\":378:399  orderList[msg.sender] */\n      dup1\n        /* \"solidity-study-main/3.tutorial/ex14/contracts/Assert.sol\":388:398  msg.sender */\n      caller\n        /* \"solidity-study-main/3.tutorial/ex14/contracts/Assert.sol\":378:399  orderList[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"solidity-study-main/3.tutorial/ex14/contracts/Assert.sol\":378:411  orderList[msg.sender] = msg.value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"solidity-study-main/3.tutorial/ex14/contracts/Assert.sol\":188:459  function order() external payable {... */\n      jump\t// out\n        /* \"#utility.yul\":7:187   */\n    tag_8:\n        /* \"#utility.yul\":55:132   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":52:53   */\n      0x00\n        /* \"#utility.yul\":45:133   */\n      mstore\n        /* \"#utility.yul\":152:156   */\n      0x01\n        /* \"#utility.yul\":149:150   */\n      0x04\n        /* \"#utility.yul\":142:157   */\n      mstore\n        /* \"#utility.yul\":176:180   */\n      0x24\n        /* \"#utility.yul\":173:174   */\n      0x00\n        /* \"#utility.yul\":166:181   */\n      revert\n\n    auxdata: 0xa26469706673582212205a4ea344c62c66656d1dadd90eab7bdb648f512371bcee9e71462a85a5c0f98e64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060e18061001f6000396000f3fe608060405260043610601c5760003560e01c8063bf15071d146021575b600080fd5b60276029565b005b600034036037576036607c565b5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fdfea26469706673582212205a4ea344c62c66656d1dadd90eab7bdb648f512371bcee9e71462a85a5c0f98e64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xE1 DUP1 PUSH2 0x1F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x1C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xBF15071D EQ PUSH1 0x21 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x27 PUSH1 0x29 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 CALLVALUE SUB PUSH1 0x37 JUMPI PUSH1 0x36 PUSH1 0x7C JUMP JUMPDEST JUMPDEST CALLVALUE PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GAS 0x4E LOG3 PREVRANDAO 0xC6 0x2C PUSH7 0x656D1DADD90EAB PUSH28 0xDB648F512371BCEE9E71462A85A5C0F98E64736F6C63430008120033 ",
							"sourceMap": "124:337:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@order_24": {
									"entryPoint": 41,
									"id": 24,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x01": {
									"entryPoint": 124,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:190:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "35:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "52:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "55:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "45:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "45:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "45:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "149:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "152:4:1",
																		"type": "",
																		"value": "0x01"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "142:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "142:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "142:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "173:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "176:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:15:1"
														}
													]
												},
												"name": "panic_error_0x01",
												"nodeType": "YulFunctionDefinition",
												"src": "7:180:1"
											}
										]
									},
									"contents": "{\n\n    function panic_error_0x01() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x01)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610601c5760003560e01c8063bf15071d146021575b600080fd5b60276029565b005b600034036037576036607c565b5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fdfea26469706673582212205a4ea344c62c66656d1dadd90eab7bdb648f512371bcee9e71462a85a5c0f98e64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x1C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xBF15071D EQ PUSH1 0x21 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x27 PUSH1 0x29 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 CALLVALUE SUB PUSH1 0x37 JUMPI PUSH1 0x36 PUSH1 0x7C JUMP JUMPDEST JUMPDEST CALLVALUE PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GAS 0x4E LOG3 PREVRANDAO 0xC6 0x2C PUSH7 0x656D1DADD90EAB PUSH28 0xDB648F512371BCEE9E71462A85A5C0F98E64736F6C63430008120033 ",
							"sourceMap": "124:337:0:-:0;;;;;;;;;;;;;;;;;;;;;188:271;;;:::i;:::-;;;248:1;235:9;:14;228:22;;;;:::i;:::-;;402:9;378;:21;388:10;378:21;;;;;;;;;;;;;;;:33;;;;188:271::o;7:180:1:-;55:77;52:1;45:88;152:4;149:1;142:15;176:4;173:1;166:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "45000",
								"executionCost": "99",
								"totalCost": "45099"
							},
							"external": {
								"order()": "22322"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 124,
									"end": 461,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 124,
									"end": 461,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 124,
									"end": 461,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 124,
									"end": 461,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 124,
									"end": 461,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 124,
									"end": 461,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 124,
									"end": 461,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 124,
									"end": 461,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 124,
									"end": 461,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 124,
									"end": 461,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 124,
									"end": 461,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 124,
									"end": 461,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 124,
									"end": 461,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 124,
									"end": 461,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 124,
									"end": 461,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 124,
									"end": 461,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 124,
									"end": 461,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 124,
									"end": 461,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 124,
									"end": 461,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 124,
									"end": 461,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 124,
									"end": 461,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205a4ea344c62c66656d1dadd90eab7bdb648f512371bcee9e71462a85a5c0f98e64736f6c63430008120033",
									".code": [
										{
											"begin": 124,
											"end": 461,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 124,
											"end": 461,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 461,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 124,
											"end": 461,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 124,
											"end": 461,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 124,
											"end": 461,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 124,
											"end": 461,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 124,
											"end": 461,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 124,
											"end": 461,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 461,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 124,
											"end": 461,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 124,
											"end": 461,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 124,
											"end": 461,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 124,
											"end": 461,
											"name": "PUSH",
											"source": 0,
											"value": "BF15071D"
										},
										{
											"begin": 124,
											"end": 461,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 124,
											"end": 461,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 124,
											"end": 461,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 124,
											"end": 461,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 124,
											"end": 461,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 124,
											"end": 461,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 461,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 124,
											"end": 461,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 188,
											"end": 459,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 188,
											"end": 459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 188,
											"end": 459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 188,
											"end": 459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 188,
											"end": 459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 188,
											"end": 459,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 188,
											"end": 459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 188,
											"end": 459,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 188,
											"end": 459,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 188,
											"end": 459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 248,
											"end": 249,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 235,
											"end": 244,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 235,
											"end": 249,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 228,
											"end": 250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 228,
											"end": 250,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 228,
											"end": 250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 228,
											"end": 250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 228,
											"end": 250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 228,
											"end": 250,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 228,
											"end": 250,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 228,
											"end": 250,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 228,
											"end": 250,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 402,
											"end": 411,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 378,
											"end": 387,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 388,
											"end": 398,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 378,
											"end": 399,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 378,
											"end": 399,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 378,
											"end": 399,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 378,
											"end": 399,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 378,
											"end": 399,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 378,
											"end": 399,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 378,
											"end": 399,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 378,
											"end": 399,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 378,
											"end": 399,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 378,
											"end": 399,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 378,
											"end": 399,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 378,
											"end": 399,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 378,
											"end": 399,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 378,
											"end": 399,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 399,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 378,
											"end": 411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 378,
											"end": 411,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 378,
											"end": 411,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 378,
											"end": 411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 188,
											"end": 459,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 187,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 7,
											"end": 187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 55,
											"end": 132,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 52,
											"end": 53,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 45,
											"end": 133,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 152,
											"end": 156,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 149,
											"end": 150,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 142,
											"end": 157,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 176,
											"end": 180,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 173,
											"end": 174,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 166,
											"end": 181,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"solidity-study-main/3.tutorial/ex14/contracts/Assert.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"order()": "bf15071d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"order\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"solidity-study-main/3.tutorial/ex14/contracts/Assert.sol\":\"Assert\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"solidity-study-main/3.tutorial/ex14/contracts/Assert.sol\":{\"keccak256\":\"0xba85f566ebdad44199e14621be8c8272d98c3b6a67a6fd8acccafbca9566538e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab0dcd7cc99fefcc2f462dd5ce89cc47adea110a9d7c19391ad75ca66008b3a8\",\"dweb:/ipfs/QmZCvypMCkAe8stsFp27ba4WBWsw88NB2G5DA2iy5i3k8x\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 5,
								"contract": "solidity-study-main/3.tutorial/ex14/contracts/Assert.sol:Assert",
								"label": "orderList",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"solidity-study-main/3.tutorial/ex14/contracts/Assert.sol": {
				"ast": {
					"absolutePath": "solidity-study-main/3.tutorial/ex14/contracts/Assert.sol",
					"exportedSymbols": {
						"Assert": [
							25
						]
					},
					"id": 26,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Assert",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 25,
							"linearizedBaseContracts": [
								25
							],
							"name": "Assert",
							"nameLocation": "133:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 5,
									"mutability": "mutable",
									"name": "orderList",
									"nameLocation": "174:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 25,
									"src": "143:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 4,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "151:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "143:22:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "160:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 23,
										"nodeType": "Block",
										"src": "222:237:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 12,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 9,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "235:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 10,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "239:5:0",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "235:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 11,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "248:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "235:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 8,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967293,
														"src": "228:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 13,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "228:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 14,
												"nodeType": "ExpressionStatement",
												"src": "228:22:0"
											},
											{
												"expression": {
													"id": 21,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 15,
															"name": "orderList",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "378:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 18,
														"indexExpression": {
															"expression": {
																"id": 16,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "388:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 17,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "392:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "388:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "378:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 19,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "402:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 20,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "406:5:0",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "402:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "378:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 22,
												"nodeType": "ExpressionStatement",
												"src": "378:33:0"
											}
										]
									},
									"functionSelector": "bf15071d",
									"id": 24,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "order",
									"nameLocation": "197:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "202:2:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "222:0:0"
									},
									"scope": 25,
									"src": "188:271:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 26,
							"src": "124:337:0",
							"usedErrors": []
						}
					],
					"src": "32:429:0"
				},
				"id": 0
			}
		}
	}
}