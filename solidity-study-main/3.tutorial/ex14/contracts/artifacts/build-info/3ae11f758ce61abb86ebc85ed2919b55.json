{
	"id": "3ae11f758ce61abb86ebc85ed2919b55",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"solidity-study-main/3.tutorial/ex14/contracts/CustomError.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\n\n// 반복적인 Error문구가 중복사용되므로, 하나로 관리\n// contract 밖에서 선언하던, 안에서 하던 상관없음\n\n// error ZeroCheckError();\n\ncontract CustomError{\n  error ZeroCheckError(string data);\n\n  mapping(address=>uint) private orderList;\n\n  function order() external payable {\n    if (msg.value == 0) {\n      revert ZeroCheckError(\"msg.value is lower than minPrice\"); // error 발생, State 롤백\n    }\n    orderList[msg.sender] = msg.value;\n  }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"solidity-study-main/3.tutorial/ex14/contracts/CustomError.sol": {
				"CustomError": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "data",
									"type": "string"
								}
							],
							"name": "ZeroCheckError",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "order",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"solidity-study-main/3.tutorial/ex14/contracts/CustomError.sol\":224:538  contract CustomError{... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"solidity-study-main/3.tutorial/ex14/contracts/CustomError.sol\":224:538  contract CustomError{... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xbf15071d\n      eq\n      tag_2\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"solidity-study-main/3.tutorial/ex14/contracts/CustomError.sol\":331:536  function order() external payable {... */\n    tag_2:\n      tag_3\n      tag_4\n      jump\t// in\n    tag_3:\n      stop\n    tag_4:\n        /* \"solidity-study-main/3.tutorial/ex14/contracts/CustomError.sol\":388:389  0 */\n      0x00\n        /* \"solidity-study-main/3.tutorial/ex14/contracts/CustomError.sol\":375:384  msg.value */\n      callvalue\n        /* \"solidity-study-main/3.tutorial/ex14/contracts/CustomError.sol\":375:389  msg.value == 0 */\n      sub\n        /* \"solidity-study-main/3.tutorial/ex14/contracts/CustomError.sol\":371:493  if (msg.value == 0) {... */\n      tag_6\n      jumpi\n        /* \"solidity-study-main/3.tutorial/ex14/contracts/CustomError.sol\":406:456  ZeroCheckError(\"msg.value is lower than minPrice\") */\n      mload(0x40)\n      0xd12e540800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_7\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"solidity-study-main/3.tutorial/ex14/contracts/CustomError.sol\":371:493  if (msg.value == 0) {... */\n    tag_6:\n        /* \"solidity-study-main/3.tutorial/ex14/contracts/CustomError.sol\":522:531  msg.value */\n      callvalue\n        /* \"solidity-study-main/3.tutorial/ex14/contracts/CustomError.sol\":498:507  orderList */\n      0x00\n        /* \"solidity-study-main/3.tutorial/ex14/contracts/CustomError.sol\":498:519  orderList[msg.sender] */\n      dup1\n        /* \"solidity-study-main/3.tutorial/ex14/contracts/CustomError.sol\":508:518  msg.sender */\n      caller\n        /* \"solidity-study-main/3.tutorial/ex14/contracts/CustomError.sol\":498:519  orderList[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"solidity-study-main/3.tutorial/ex14/contracts/CustomError.sol\":498:531  orderList[msg.sender] = msg.value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"solidity-study-main/3.tutorial/ex14/contracts/CustomError.sol\":331:536  function order() external payable {... */\n      jump\t// out\n        /* \"#utility.yul\":7:176   */\n    tag_9:\n        /* \"#utility.yul\":91:102   */\n      0x00\n        /* \"#utility.yul\":125:131   */\n      dup3\n        /* \"#utility.yul\":120:123   */\n      dup3\n        /* \"#utility.yul\":113:132   */\n      mstore\n        /* \"#utility.yul\":165:169   */\n      0x20\n        /* \"#utility.yul\":160:163   */\n      dup3\n        /* \"#utility.yul\":156:170   */\n      add\n        /* \"#utility.yul\":141:170   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:176   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":182:364   */\n    tag_10:\n        /* \"#utility.yul\":322:356   */\n      0x6d73672e76616c7565206973206c6f776572207468616e206d696e5072696365\n        /* \"#utility.yul\":318:319   */\n      0x00\n        /* \"#utility.yul\":310:316   */\n      dup3\n        /* \"#utility.yul\":306:320   */\n      add\n        /* \"#utility.yul\":299:357   */\n      mstore\n        /* \"#utility.yul\":182:364   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":370:736   */\n    tag_11:\n        /* \"#utility.yul\":512:515   */\n      0x00\n        /* \"#utility.yul\":533:600   */\n      tag_16\n        /* \"#utility.yul\":597:599   */\n      0x20\n        /* \"#utility.yul\":592:595   */\n      dup4\n        /* \"#utility.yul\":533:600   */\n      tag_9\n      jump\t// in\n    tag_16:\n        /* \"#utility.yul\":526:600   */\n      swap2\n      pop\n        /* \"#utility.yul\":609:702   */\n      tag_17\n        /* \"#utility.yul\":698:701   */\n      dup3\n        /* \"#utility.yul\":609:702   */\n      tag_10\n      jump\t// in\n    tag_17:\n        /* \"#utility.yul\":727:729   */\n      0x20\n        /* \"#utility.yul\":722:725   */\n      dup3\n        /* \"#utility.yul\":718:730   */\n      add\n        /* \"#utility.yul\":711:730   */\n      swap1\n      pop\n        /* \"#utility.yul\":370:736   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":742:1161   */\n    tag_8:\n        /* \"#utility.yul\":908:912   */\n      0x00\n        /* \"#utility.yul\":946:948   */\n      0x20\n        /* \"#utility.yul\":935:944   */\n      dup3\n        /* \"#utility.yul\":931:949   */\n      add\n        /* \"#utility.yul\":923:949   */\n      swap1\n      pop\n        /* \"#utility.yul\":995:1004   */\n      dup2\n        /* \"#utility.yul\":989:993   */\n      dup2\n        /* \"#utility.yul\":985:1005   */\n      sub\n        /* \"#utility.yul\":981:982   */\n      0x00\n        /* \"#utility.yul\":970:979   */\n      dup4\n        /* \"#utility.yul\":966:983   */\n      add\n        /* \"#utility.yul\":959:1006   */\n      mstore\n        /* \"#utility.yul\":1023:1154   */\n      tag_19\n        /* \"#utility.yul\":1149:1153   */\n      dup2\n        /* \"#utility.yul\":1023:1154   */\n      tag_11\n      jump\t// in\n    tag_19:\n        /* \"#utility.yul\":1015:1154   */\n      swap1\n      pop\n        /* \"#utility.yul\":742:1161   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212202d4aa727656baae1c509dac9265f3d8d26bea4c185ea59804893f225229ae57f64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610168806100206000396000f3fe60806040526004361061001e5760003560e01c8063bf15071d14610023575b600080fd5b61002b61002d565b005b60003403610070576040517fd12e540800000000000000000000000000000000000000000000000000000000815260040161006790610112565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b600082825260208201905092915050565b7f6d73672e76616c7565206973206c6f776572207468616e206d696e5072696365600082015250565b60006100fc6020836100b5565b9150610107826100c6565b602082019050919050565b6000602082019050818103600083015261012b816100ef565b905091905056fea26469706673582212202d4aa727656baae1c509dac9265f3d8d26bea4c185ea59804893f225229ae57f64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x168 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xBF15071D EQ PUSH2 0x23 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2B PUSH2 0x2D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 CALLVALUE SUB PUSH2 0x70 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD12E540800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67 SWAP1 PUSH2 0x112 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6D73672E76616C7565206973206C6F776572207468616E206D696E5072696365 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFC PUSH1 0x20 DUP4 PUSH2 0xB5 JUMP JUMPDEST SWAP2 POP PUSH2 0x107 DUP3 PUSH2 0xC6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x12B DUP2 PUSH2 0xEF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2D 0x4A 0xA7 0x27 PUSH6 0x6BAAE1C509DA 0xC9 0x26 0x5F RETURNDATASIZE DUP14 0x26 0xBE LOG4 0xC1 DUP6 0xEA MSIZE DUP1 BASEFEE SWAP4 CALLCODE 0x25 0x22 SWAP11 0xE5 PUSH32 0x64736F6C63430008120033000000000000000000000000000000000000000000 ",
							"sourceMap": "224:314:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@order_31": {
									"entryPoint": 45,
									"id": 31,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_412642c451bdac8040b57ad8599ea5c8a12d9b0cce1662eb90b01749c169c1a1_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 239,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_412642c451bdac8040b57ad8599ea5c8a12d9b0cce1662eb90b01749c169c1a1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 274,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 181,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"store_literal_in_memory_412642c451bdac8040b57ad8599ea5c8a12d9b0cce1662eb90b01749c169c1a1": {
									"entryPoint": 198,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1164:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "103:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "120:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "125:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "113:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "113:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "113:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "141:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "160:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "165:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "156:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "156:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "141:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "75:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "80:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "91:11:1",
														"type": ""
													}
												],
												"src": "7:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "288:76:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "318:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "306:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "306:14:1"
																	},
																	{
																		"hexValue": "6d73672e76616c7565206973206c6f776572207468616e206d696e5072696365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "322:34:1",
																		"type": "",
																		"value": "msg.value is lower than minPrice"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "299:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "299:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "299:58:1"
														}
													]
												},
												"name": "store_literal_in_memory_412642c451bdac8040b57ad8599ea5c8a12d9b0cce1662eb90b01749c169c1a1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "280:6:1",
														"type": ""
													}
												],
												"src": "182:182:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "516:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "526:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "592:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "597:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "533:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "533:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "526:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "698:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_412642c451bdac8040b57ad8599ea5c8a12d9b0cce1662eb90b01749c169c1a1",
																	"nodeType": "YulIdentifier",
																	"src": "609:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "609:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "609:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "711:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "722:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "727:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "718:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "718:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "711:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_412642c451bdac8040b57ad8599ea5c8a12d9b0cce1662eb90b01749c169c1a1_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "504:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "512:3:1",
														"type": ""
													}
												],
												"src": "370:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "913:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "923:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "935:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "946:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "931:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "931:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "923:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "970:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "981:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "966:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "966:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "989:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "995:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "985:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "985:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "959:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "959:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "959:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1015:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1149:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_412642c451bdac8040b57ad8599ea5c8a12d9b0cce1662eb90b01749c169c1a1_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1023:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1023:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1015:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_412642c451bdac8040b57ad8599ea5c8a12d9b0cce1662eb90b01749c169c1a1__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "893:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "908:4:1",
														"type": ""
													}
												],
												"src": "742:419:1"
											}
										]
									},
									"contents": "{\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_412642c451bdac8040b57ad8599ea5c8a12d9b0cce1662eb90b01749c169c1a1(memPtr) {\n\n        mstore(add(memPtr, 0), \"msg.value is lower than minPrice\")\n\n    }\n\n    function abi_encode_t_stringliteral_412642c451bdac8040b57ad8599ea5c8a12d9b0cce1662eb90b01749c169c1a1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_412642c451bdac8040b57ad8599ea5c8a12d9b0cce1662eb90b01749c169c1a1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_412642c451bdac8040b57ad8599ea5c8a12d9b0cce1662eb90b01749c169c1a1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_412642c451bdac8040b57ad8599ea5c8a12d9b0cce1662eb90b01749c169c1a1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061001e5760003560e01c8063bf15071d14610023575b600080fd5b61002b61002d565b005b60003403610070576040517fd12e540800000000000000000000000000000000000000000000000000000000815260040161006790610112565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b600082825260208201905092915050565b7f6d73672e76616c7565206973206c6f776572207468616e206d696e5072696365600082015250565b60006100fc6020836100b5565b9150610107826100c6565b602082019050919050565b6000602082019050818103600083015261012b816100ef565b905091905056fea26469706673582212202d4aa727656baae1c509dac9265f3d8d26bea4c185ea59804893f225229ae57f64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xBF15071D EQ PUSH2 0x23 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2B PUSH2 0x2D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 CALLVALUE SUB PUSH2 0x70 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD12E540800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67 SWAP1 PUSH2 0x112 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6D73672E76616C7565206973206C6F776572207468616E206D696E5072696365 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFC PUSH1 0x20 DUP4 PUSH2 0xB5 JUMP JUMPDEST SWAP2 POP PUSH2 0x107 DUP3 PUSH2 0xC6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x12B DUP2 PUSH2 0xEF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2D 0x4A 0xA7 0x27 PUSH6 0x6BAAE1C509DA 0xC9 0x26 0x5F RETURNDATASIZE DUP14 0x26 0xBE LOG4 0xC1 DUP6 0xEA MSIZE DUP1 BASEFEE SWAP4 CALLCODE 0x25 0x22 SWAP11 0xE5 PUSH32 0x64736F6C63430008120033000000000000000000000000000000000000000000 ",
							"sourceMap": "224:314:0:-:0;;;;;;;;;;;;;;;;;;;;;331:205;;;:::i;:::-;;;388:1;375:9;:14;371:122;;406:50;;;;;;;;;;:::i;:::-;;;;;;;;371:122;522:9;498;:21;508:10;498:21;;;;;;;;;;;;;;;:33;;;;331:205::o;7:169:1:-;91:11;125:6;120:3;113:19;165:4;160:3;156:14;141:29;;7:169;;;;:::o;182:182::-;322:34;318:1;310:6;306:14;299:58;182:182;:::o;370:366::-;512:3;533:67;597:2;592:3;533:67;:::i;:::-;526:74;;609:93;698:3;609:93;:::i;:::-;727:2;722:3;718:12;711:19;;370:366;;;:::o;742:419::-;908:4;946:2;935:9;931:18;923:26;;995:9;989:4;985:20;981:1;970:9;966:17;959:47;1023:131;1149:4;1023:131;:::i;:::-;1015:139;;742:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "72000",
								"executionCost": "123",
								"totalCost": "72123"
							},
							"external": {
								"order()": "22322"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 224,
									"end": 538,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 224,
									"end": 538,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 224,
									"end": 538,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 224,
									"end": 538,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 224,
									"end": 538,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 224,
									"end": 538,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 224,
									"end": 538,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 224,
									"end": 538,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 224,
									"end": 538,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 538,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 224,
									"end": 538,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 224,
									"end": 538,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 224,
									"end": 538,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 224,
									"end": 538,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 224,
									"end": 538,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 224,
									"end": 538,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 224,
									"end": 538,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 224,
									"end": 538,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 538,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 224,
									"end": 538,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 538,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202d4aa727656baae1c509dac9265f3d8d26bea4c185ea59804893f225229ae57f64736f6c63430008120033",
									".code": [
										{
											"begin": 224,
											"end": 538,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 224,
											"end": 538,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 224,
											"end": 538,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 224,
											"end": 538,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 224,
											"end": 538,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 224,
											"end": 538,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 224,
											"end": 538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 224,
											"end": 538,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 224,
											"end": 538,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 224,
											"end": 538,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 224,
											"end": 538,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 224,
											"end": 538,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 224,
											"end": 538,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 224,
											"end": 538,
											"name": "PUSH",
											"source": 0,
											"value": "BF15071D"
										},
										{
											"begin": 224,
											"end": 538,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 224,
											"end": 538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 224,
											"end": 538,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 224,
											"end": 538,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 224,
											"end": 538,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 224,
											"end": 538,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 224,
											"end": 538,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 224,
											"end": 538,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 331,
											"end": 536,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 331,
											"end": 536,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 331,
											"end": 536,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 331,
											"end": 536,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 331,
											"end": 536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 331,
											"end": 536,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 331,
											"end": 536,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 331,
											"end": 536,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 331,
											"end": 536,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 331,
											"end": 536,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 388,
											"end": 389,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 375,
											"end": 384,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 375,
											"end": 389,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 371,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 371,
											"end": 493,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 406,
											"end": 456,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 406,
											"end": 456,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 406,
											"end": 456,
											"name": "PUSH",
											"source": 0,
											"value": "D12E540800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 406,
											"end": 456,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 406,
											"end": 456,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 406,
											"end": 456,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 406,
											"end": 456,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 406,
											"end": 456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 406,
											"end": 456,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 406,
											"end": 456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 406,
											"end": 456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 406,
											"end": 456,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 406,
											"end": 456,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 406,
											"end": 456,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 406,
											"end": 456,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 406,
											"end": 456,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 406,
											"end": 456,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 406,
											"end": 456,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 406,
											"end": 456,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 406,
											"end": 456,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 371,
											"end": 493,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 371,
											"end": 493,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 522,
											"end": 531,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 498,
											"end": 507,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 498,
											"end": 519,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 508,
											"end": 518,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 498,
											"end": 519,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 498,
											"end": 519,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 498,
											"end": 519,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 498,
											"end": 519,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 498,
											"end": 519,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 498,
											"end": 519,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 498,
											"end": 519,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 498,
											"end": 519,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 498,
											"end": 519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 498,
											"end": 519,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 498,
											"end": 519,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 498,
											"end": 519,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 498,
											"end": 519,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 498,
											"end": 519,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 498,
											"end": 519,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 498,
											"end": 531,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 498,
											"end": 531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 498,
											"end": 531,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 498,
											"end": 531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 331,
											"end": 536,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 176,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 7,
											"end": 176,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 91,
											"end": 102,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 131,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 120,
											"end": 123,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 113,
											"end": 132,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 165,
											"end": 169,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 160,
											"end": 163,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 156,
											"end": 170,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 141,
											"end": 170,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 141,
											"end": 170,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 176,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7,
											"end": 176,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 176,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 176,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 182,
											"end": 364,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 182,
											"end": 364,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 322,
											"end": 356,
											"name": "PUSH",
											"source": 1,
											"value": "6D73672E76616C7565206973206C6F776572207468616E206D696E5072696365"
										},
										{
											"begin": 318,
											"end": 319,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 310,
											"end": 316,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 306,
											"end": 320,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 299,
											"end": 357,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 182,
											"end": 364,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 182,
											"end": 364,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 370,
											"end": 736,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 370,
											"end": 736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 512,
											"end": 515,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 533,
											"end": 600,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 597,
											"end": 599,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 592,
											"end": 595,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 533,
											"end": 600,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 533,
											"end": 600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 533,
											"end": 600,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 533,
											"end": 600,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 526,
											"end": 600,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 526,
											"end": 600,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 609,
											"end": 702,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 698,
											"end": 701,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 609,
											"end": 702,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 609,
											"end": 702,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 609,
											"end": 702,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 609,
											"end": 702,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 727,
											"end": 729,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 722,
											"end": 725,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 718,
											"end": 730,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 711,
											"end": 730,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 711,
											"end": 730,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 370,
											"end": 736,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 370,
											"end": 736,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 370,
											"end": 736,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 370,
											"end": 736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 742,
											"end": 1161,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 742,
											"end": 1161,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 908,
											"end": 912,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 946,
											"end": 948,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 935,
											"end": 944,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 931,
											"end": 949,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 923,
											"end": 949,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 923,
											"end": 949,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 995,
											"end": 1004,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 989,
											"end": 993,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 985,
											"end": 1005,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 981,
											"end": 982,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 970,
											"end": 979,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 966,
											"end": 983,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 959,
											"end": 1006,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1149,
											"end": 1153,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1023,
											"end": 1154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1154,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1023,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1015,
											"end": 1154,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1015,
											"end": 1154,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 742,
											"end": 1161,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 742,
											"end": 1161,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 742,
											"end": 1161,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 742,
											"end": 1161,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"solidity-study-main/3.tutorial/ex14/contracts/CustomError.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"order()": "bf15071d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"ZeroCheckError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"order\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"solidity-study-main/3.tutorial/ex14/contracts/CustomError.sol\":\"CustomError\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"solidity-study-main/3.tutorial/ex14/contracts/CustomError.sol\":{\"keccak256\":\"0x9f79ff41aa44837aabba95796d276820d747aaa2582d2be1fab636d964483401\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbf25386b901d1c7422b101d04d213b7b7422c9a809b5bdb91cb6bf6d77e49f\",\"dweb:/ipfs/QmTNJAZdadgVSdaQFruPEUYS3U7n6wzDfZJr6fvxGauaXT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 9,
								"contract": "solidity-study-main/3.tutorial/ex14/contracts/CustomError.sol:CustomError",
								"label": "orderList",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"solidity-study-main/3.tutorial/ex14/contracts/CustomError.sol": {
				"ast": {
					"absolutePath": "solidity-study-main/3.tutorial/ex14/contracts/CustomError.sol",
					"exportedSymbols": {
						"CustomError": [
							32
						]
					},
					"id": 33,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "CustomError",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 32,
							"linearizedBaseContracts": [
								32
							],
							"name": "CustomError",
							"nameLocation": "233:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"errorSelector": "d12e5408",
									"id": 5,
									"name": "ZeroCheckError",
									"nameLocation": "254:14:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "276:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 5,
												"src": "269:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "269:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "268:13:0"
									},
									"src": "248:34:0"
								},
								{
									"constant": false,
									"id": 9,
									"mutability": "mutable",
									"name": "orderList",
									"nameLocation": "317:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 32,
									"src": "286:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 8,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 6,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "294:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "286:22:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 7,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "303:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "365:171:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 12,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "375:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 13,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "379:5:0",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "375:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 14,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "388:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "375:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 21,
												"nodeType": "IfStatement",
												"src": "371:122:0",
												"trueBody": {
													"id": 20,
													"nodeType": "Block",
													"src": "391:102:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "6d73672e76616c7565206973206c6f776572207468616e206d696e5072696365",
																		"id": 17,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "421:34:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_412642c451bdac8040b57ad8599ea5c8a12d9b0cce1662eb90b01749c169c1a1",
																			"typeString": "literal_string \"msg.value is lower than minPrice\""
																		},
																		"value": "msg.value is lower than minPrice"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_412642c451bdac8040b57ad8599ea5c8a12d9b0cce1662eb90b01749c169c1a1",
																			"typeString": "literal_string \"msg.value is lower than minPrice\""
																		}
																	],
																	"id": 16,
																	"name": "ZeroCheckError",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "406:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 18,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "406:50:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 19,
															"nodeType": "RevertStatement",
															"src": "399:57:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 28,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 22,
															"name": "orderList",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "498:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 25,
														"indexExpression": {
															"expression": {
																"id": 23,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "508:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 24,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "512:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "508:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "498:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 26,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "522:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 27,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "526:5:0",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "522:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "498:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 29,
												"nodeType": "ExpressionStatement",
												"src": "498:33:0"
											}
										]
									},
									"functionSelector": "bf15071d",
									"id": 31,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "order",
									"nameLocation": "340:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "345:2:0"
									},
									"returnParameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "365:0:0"
									},
									"scope": 32,
									"src": "331:205:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 33,
							"src": "224:314:0",
							"usedErrors": [
								5
							]
						}
					],
					"src": "32:506:0"
				},
				"id": 0
			}
		}
	}
}