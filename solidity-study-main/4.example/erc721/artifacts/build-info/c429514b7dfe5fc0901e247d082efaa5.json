{
	"id": "c429514b7dfe5fc0901e247d082efaa5",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"solidity-study-main/4.example/erc721/safeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.8.0 <0.9.0;\r\n\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\n\r\ncontract Math {\r\n    using SafeMath for uint256;\r\n\r\n    uint public a = 5;\r\n    uint public b = 5;\r\n    uint public c = 7;\r\n    uint public d = 0;\r\n\r\n    function Add() public view returns(uint) {\r\n        return a.add(b); \r\n    }\r\n\r\n    function Sub() public view returns(uint) {\r\n        return a.sub(b);\r\n    }\r\n\r\n    function Sub2() public view returns(uint) {\r\n        return a.sub(c);\r\n    }\r\n\r\n    function Mul() public view returns(uint) {\r\n        return a.mul(b);\r\n    }\r\n\r\n    function Div() public view returns(uint) {\r\n        return a.div(b);\r\n    }\r\n\r\n    function Div2() public view returns(uint) {\r\n        return a.div(d);\r\n    }\r\n\r\n}"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220747d20e7b3ab292586e70182781bd760ee8c0a42ba19e139efc4b47692d53d4264736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220747d20e7b3ab292586e70182781bd760ee8c0a42ba19e139efc4b47692d53d4264736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH21 0x7D20E7B3AB292586E70182781BD760EE8C0A42BA19 0xE1 CODECOPY 0xEF 0xC4 0xB4 PUSH23 0x92D53D4264736F6C634300081200330000000000000000 ",
							"sourceMap": "482:6210:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220747d20e7b3ab292586e70182781bd760ee8c0a42ba19e139efc4b47692d53d4264736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH21 0x7D20E7B3AB292586E70182781BD760EE8C0A42BA19 0xE1 CODECOPY 0xEF 0xC4 0xB4 PUSH23 0x92D53D4264736F6C634300081200330000000000000000 ",
							"sourceMap": "482:6210:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220747d20e7b3ab292586e70182781bd760ee8c0a42ba19e139efc4b47692d53d4264736f6c63430008120033",
									".code": [
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"solidity-study-main/4.example/erc721/safeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"solidity-study-main/4.example/erc721/safeMath.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "Add",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "Div",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "Div2",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "Mul",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "Sub",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "Sub2",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "a",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "b",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "c",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "d",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"solidity-study-main/4.example/erc721/safeMath.sol\":129:781  contract Math {... */\n  mstore(0x40, 0x80)\n    /* \"solidity-study-main/4.example/erc721/safeMath.sol\":201:202  5 */\n  0x05\n    /* \"solidity-study-main/4.example/erc721/safeMath.sol\":185:202  uint public a = 5 */\n  0x00\n  sstore\n    /* \"solidity-study-main/4.example/erc721/safeMath.sol\":225:226  5 */\n  0x05\n    /* \"solidity-study-main/4.example/erc721/safeMath.sol\":209:226  uint public b = 5 */\n  0x01\n  sstore\n    /* \"solidity-study-main/4.example/erc721/safeMath.sol\":249:250  7 */\n  0x07\n    /* \"solidity-study-main/4.example/erc721/safeMath.sol\":233:250  uint public c = 7 */\n  0x02\n  sstore\n    /* \"solidity-study-main/4.example/erc721/safeMath.sol\":273:274  0 */\n  0x00\n    /* \"solidity-study-main/4.example/erc721/safeMath.sol\":257:274  uint public d = 0 */\n  0x03\n  sstore\n    /* \"solidity-study-main/4.example/erc721/safeMath.sol\":129:781  contract Math {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"solidity-study-main/4.example/erc721/safeMath.sol\":129:781  contract Math {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xa0401885\n      gt\n      tag_13\n      jumpi\n      dup1\n      0xa0401885\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xb1298428\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xb87f3280\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xc3da42b8\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xdeee4403\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_13:\n      dup1\n      0x03d5a26b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0dbe671f\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x4df7e3d0\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x67e06858\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x8a054ac2\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"solidity-study-main/4.example/erc721/safeMath.sol\":700:776  function Div2() public view returns(uint) {... */\n    tag_3:\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"solidity-study-main/4.example/erc721/safeMath.sol\":185:202  uint public a = 5 */\n    tag_4:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"solidity-study-main/4.example/erc721/safeMath.sol\":209:226  uint public b = 5 */\n    tag_5:\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"solidity-study-main/4.example/erc721/safeMath.sol\":283:359  function Add() public view returns(uint) {... */\n    tag_6:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"solidity-study-main/4.example/erc721/safeMath.sol\":257:274  uint public d = 0 */\n    tag_7:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"solidity-study-main/4.example/erc721/safeMath.sol\":450:526  function Sub2() public view returns(uint) {... */\n    tag_8:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"solidity-study-main/4.example/erc721/safeMath.sol\":534:609  function Mul() public view returns(uint) {... */\n    tag_9:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"solidity-study-main/4.example/erc721/safeMath.sol\":367:442  function Sub() public view returns(uint) {... */\n    tag_10:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"solidity-study-main/4.example/erc721/safeMath.sol\":233:250  uint public c = 7 */\n    tag_11:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"solidity-study-main/4.example/erc721/safeMath.sol\":617:692  function Div() public view returns(uint) {... */\n    tag_12:\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"solidity-study-main/4.example/erc721/safeMath.sol\":700:776  function Div2() public view returns(uint) {... */\n    tag_15:\n        /* \"solidity-study-main/4.example/erc721/safeMath.sol\":736:740  uint */\n      0x00\n        /* \"solidity-study-main/4.example/erc721/safeMath.sol\":760:768  a.div(d) */\n      tag_46\n        /* \"solidity-study-main/4.example/erc721/safeMath.sol\":766:767  d */\n      sload(0x03)\n        /* \"solidity-study-main/4.example/erc721/safeMath.sol\":760:761  a */\n      sload(0x00)\n        /* \"solidity-study-main/4.example/erc721/safeMath.sol\":760:765  a.div */\n      tag_47\n      swap1\n        /* \"solidity-study-main/4.example/erc721/safeMath.sol\":760:768  a.div(d) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_46:\n        /* \"solidity-study-main/4.example/erc721/safeMath.sol\":753:768  return a.div(d) */\n      swap1\n      pop\n        /* \"solidity-study-main/4.example/erc721/safeMath.sol\":700:776  function Div2() public view returns(uint) {... */\n      swap1\n      jump\t// out\n        /* \"solidity-study-main/4.example/erc721/safeMath.sol\":185:202  uint public a = 5 */\n    tag_19:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"solidity-study-main/4.example/erc721/safeMath.sol\":209:226  uint public b = 5 */\n    tag_22:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"solidity-study-main/4.example/erc721/safeMath.sol\":283:359  function Add() public view returns(uint) {... */\n    tag_25:\n        /* \"solidity-study-main/4.example/erc721/safeMath.sol\":318:322  uint */\n      0x00\n        /* \"solidity-study-main/4.example/erc721/safeMath.sol\":342:350  a.add(b) */\n      tag_49\n        /* \"solidity-study-main/4.example/erc721/safeMath.sol\":348:349  b */\n      sload(0x01)\n        /* \"solidity-study-main/4.example/erc721/safeMath.sol\":342:343  a */\n      sload(0x00)\n        /* \"solidity-study-main/4.example/erc721/safeMath.sol\":342:347  a.add */\n      tag_50\n      swap1\n        /* \"solidity-study-main/4.example/erc721/safeMath.sol\":342:350  a.add(b) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_49:\n        /* \"solidity-study-main/4.example/erc721/safeMath.sol\":335:350  return a.add(b) */\n      swap1\n      pop\n        /* \"solidity-study-main/4.example/erc721/safeMath.sol\":283:359  function Add() public view returns(uint) {... */\n      swap1\n      jump\t// out\n        /* \"solidity-study-main/4.example/erc721/safeMath.sol\":257:274  uint public d = 0 */\n    tag_28:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"solidity-study-main/4.example/erc721/safeMath.sol\":450:526  function Sub2() public view returns(uint) {... */\n    tag_31:\n        /* \"solidity-study-main/4.example/erc721/safeMath.sol\":486:490  uint */\n      0x00\n        /* \"solidity-study-main/4.example/erc721/safeMath.sol\":510:518  a.sub(c) */\n      tag_52\n        /* \"solidity-study-main/4.example/erc721/safeMath.sol\":516:517  c */\n      sload(0x02)\n        /* \"solidity-study-main/4.example/erc721/safeMath.sol\":510:511  a */\n      sload(0x00)\n        /* \"solidity-study-main/4.example/erc721/safeMath.sol\":510:515  a.sub */\n      tag_53\n      swap1\n        /* \"solidity-study-main/4.example/erc721/safeMath.sol\":510:518  a.sub(c) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_52:\n        /* \"solidity-study-main/4.example/erc721/safeMath.sol\":503:518  return a.sub(c) */\n      swap1\n      pop\n        /* \"solidity-study-main/4.example/erc721/safeMath.sol\":450:526  function Sub2() public view returns(uint) {... */\n      swap1\n      jump\t// out\n        /* \"solidity-study-main/4.example/erc721/safeMath.sol\":534:609  function Mul() public view returns(uint) {... */\n    tag_34:\n        /* \"solidity-study-main/4.example/erc721/safeMath.sol\":569:573  uint */\n      0x00\n        /* \"solidity-study-main/4.example/erc721/safeMath.sol\":593:601  a.mul(b) */\n      tag_55\n        /* \"solidity-study-main/4.example/erc721/safeMath.sol\":599:600  b */\n      sload(0x01)\n        /* \"solidity-study-main/4.example/erc721/safeMath.sol\":593:594  a */\n      sload(0x00)\n        /* \"solidity-study-main/4.example/erc721/safeMath.sol\":593:598  a.mul */\n      tag_56\n      swap1\n        /* \"solidity-study-main/4.example/erc721/safeMath.sol\":593:601  a.mul(b) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_55:\n        /* \"solidity-study-main/4.example/erc721/safeMath.sol\":586:601  return a.mul(b) */\n      swap1\n      pop\n        /* \"solidity-study-main/4.example/erc721/safeMath.sol\":534:609  function Mul() public view returns(uint) {... */\n      swap1\n      jump\t// out\n        /* \"solidity-study-main/4.example/erc721/safeMath.sol\":367:442  function Sub() public view returns(uint) {... */\n    tag_37:\n        /* \"solidity-study-main/4.example/erc721/safeMath.sol\":402:406  uint */\n      0x00\n        /* \"solidity-study-main/4.example/erc721/safeMath.sol\":426:434  a.sub(b) */\n      tag_58\n        /* \"solidity-study-main/4.example/erc721/safeMath.sol\":432:433  b */\n      sload(0x01)\n        /* \"solidity-study-main/4.example/erc721/safeMath.sol\":426:427  a */\n      sload(0x00)\n        /* \"solidity-study-main/4.example/erc721/safeMath.sol\":426:431  a.sub */\n      tag_53\n      swap1\n        /* \"solidity-study-main/4.example/erc721/safeMath.sol\":426:434  a.sub(b) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_58:\n        /* \"solidity-study-main/4.example/erc721/safeMath.sol\":419:434  return a.sub(b) */\n      swap1\n      pop\n        /* \"solidity-study-main/4.example/erc721/safeMath.sol\":367:442  function Sub() public view returns(uint) {... */\n      swap1\n      jump\t// out\n        /* \"solidity-study-main/4.example/erc721/safeMath.sol\":233:250  uint public c = 7 */\n    tag_40:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"solidity-study-main/4.example/erc721/safeMath.sol\":617:692  function Div() public view returns(uint) {... */\n    tag_43:\n        /* \"solidity-study-main/4.example/erc721/safeMath.sol\":652:656  uint */\n      0x00\n        /* \"solidity-study-main/4.example/erc721/safeMath.sol\":676:684  a.div(b) */\n      tag_60\n        /* \"solidity-study-main/4.example/erc721/safeMath.sol\":682:683  b */\n      sload(0x01)\n        /* \"solidity-study-main/4.example/erc721/safeMath.sol\":676:677  a */\n      sload(0x00)\n        /* \"solidity-study-main/4.example/erc721/safeMath.sol\":676:681  a.div */\n      tag_47\n      swap1\n        /* \"solidity-study-main/4.example/erc721/safeMath.sol\":676:684  a.div(b) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_60:\n        /* \"solidity-study-main/4.example/erc721/safeMath.sol\":669:684  return a.div(b) */\n      swap1\n      pop\n        /* \"solidity-study-main/4.example/erc721/safeMath.sol\":617:692  function Div() public view returns(uint) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3908:3915  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3938:3939  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3935  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3927:3939  return a / b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_50:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2832:2844  return a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_53:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3180:3187  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3210:3211  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3207  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_68\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3199:3211  return a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3523:3530  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3553:3554  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3550  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_71\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3542:3554  return a * b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_73:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_74:\n        /* \"#utility.yul\":177:201   */\n      tag_80\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_73\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_17:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_82\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_74\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:622   */\n    tag_75:\n        /* \"#utility.yul\":490:567   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":487:488   */\n      0x00\n        /* \"#utility.yul\":480:568   */\n      mstore\n        /* \"#utility.yul\":587:591   */\n      0x12\n        /* \"#utility.yul\":584:585   */\n      0x04\n        /* \"#utility.yul\":577:592   */\n      mstore\n        /* \"#utility.yul\":611:615   */\n      0x24\n        /* \"#utility.yul\":608:609   */\n      0x00\n        /* \"#utility.yul\":601:616   */\n      revert\n        /* \"#utility.yul\":628:808   */\n    tag_76:\n        /* \"#utility.yul\":676:753   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":673:674   */\n      0x00\n        /* \"#utility.yul\":666:754   */\n      mstore\n        /* \"#utility.yul\":773:777   */\n      0x11\n        /* \"#utility.yul\":770:771   */\n      0x04\n        /* \"#utility.yul\":763:778   */\n      mstore\n        /* \"#utility.yul\":797:801   */\n      0x24\n        /* \"#utility.yul\":794:795   */\n      0x00\n        /* \"#utility.yul\":787:802   */\n      revert\n        /* \"#utility.yul\":814:999   */\n    tag_63:\n        /* \"#utility.yul\":854:855   */\n      0x00\n        /* \"#utility.yul\":871:891   */\n      tag_86\n        /* \"#utility.yul\":889:890   */\n      dup3\n        /* \"#utility.yul\":871:891   */\n      tag_73\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":866:891   */\n      swap2\n      pop\n        /* \"#utility.yul\":905:925   */\n      tag_87\n        /* \"#utility.yul\":923:924   */\n      dup4\n        /* \"#utility.yul\":905:925   */\n      tag_73\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":900:925   */\n      swap3\n      pop\n        /* \"#utility.yul\":944:945   */\n      dup3\n        /* \"#utility.yul\":934:969   */\n      tag_88\n      jumpi\n        /* \"#utility.yul\":949:967   */\n      tag_89\n      tag_75\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":934:969   */\n    tag_88:\n        /* \"#utility.yul\":991:992   */\n      dup3\n        /* \"#utility.yul\":988:989   */\n      dup3\n        /* \"#utility.yul\":984:993   */\n      div\n        /* \"#utility.yul\":979:993   */\n      swap1\n      pop\n        /* \"#utility.yul\":814:999   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1005:1196   */\n    tag_66:\n        /* \"#utility.yul\":1045:1048   */\n      0x00\n        /* \"#utility.yul\":1064:1084   */\n      tag_91\n        /* \"#utility.yul\":1082:1083   */\n      dup3\n        /* \"#utility.yul\":1064:1084   */\n      tag_73\n      jump\t// in\n    tag_91:\n        /* \"#utility.yul\":1059:1084   */\n      swap2\n      pop\n        /* \"#utility.yul\":1098:1118   */\n      tag_92\n        /* \"#utility.yul\":1116:1117   */\n      dup4\n        /* \"#utility.yul\":1098:1118   */\n      tag_73\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":1093:1118   */\n      swap3\n      pop\n        /* \"#utility.yul\":1141:1142   */\n      dup3\n        /* \"#utility.yul\":1138:1139   */\n      dup3\n        /* \"#utility.yul\":1134:1143   */\n      add\n        /* \"#utility.yul\":1127:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1162:1165   */\n      dup1\n        /* \"#utility.yul\":1159:1160   */\n      dup3\n        /* \"#utility.yul\":1156:1166   */\n      gt\n        /* \"#utility.yul\":1153:1189   */\n      iszero\n      tag_93\n      jumpi\n        /* \"#utility.yul\":1169:1187   */\n      tag_94\n      tag_76\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":1153:1189   */\n    tag_93:\n        /* \"#utility.yul\":1005:1196   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1202:1396   */\n    tag_69:\n        /* \"#utility.yul\":1242:1246   */\n      0x00\n        /* \"#utility.yul\":1262:1282   */\n      tag_96\n        /* \"#utility.yul\":1280:1281   */\n      dup3\n        /* \"#utility.yul\":1262:1282   */\n      tag_73\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":1257:1282   */\n      swap2\n      pop\n        /* \"#utility.yul\":1296:1316   */\n      tag_97\n        /* \"#utility.yul\":1314:1315   */\n      dup4\n        /* \"#utility.yul\":1296:1316   */\n      tag_73\n      jump\t// in\n    tag_97:\n        /* \"#utility.yul\":1291:1316   */\n      swap3\n      pop\n        /* \"#utility.yul\":1340:1341   */\n      dup3\n        /* \"#utility.yul\":1337:1338   */\n      dup3\n        /* \"#utility.yul\":1333:1342   */\n      sub\n        /* \"#utility.yul\":1325:1342   */\n      swap1\n      pop\n        /* \"#utility.yul\":1364:1365   */\n      dup2\n        /* \"#utility.yul\":1358:1362   */\n      dup2\n        /* \"#utility.yul\":1355:1366   */\n      gt\n        /* \"#utility.yul\":1352:1389   */\n      iszero\n      tag_98\n      jumpi\n        /* \"#utility.yul\":1369:1387   */\n      tag_99\n      tag_76\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":1352:1389   */\n    tag_98:\n        /* \"#utility.yul\":1202:1396   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1402:1812   */\n    tag_72:\n        /* \"#utility.yul\":1442:1449   */\n      0x00\n        /* \"#utility.yul\":1465:1485   */\n      tag_101\n        /* \"#utility.yul\":1483:1484   */\n      dup3\n        /* \"#utility.yul\":1465:1485   */\n      tag_73\n      jump\t// in\n    tag_101:\n        /* \"#utility.yul\":1460:1485   */\n      swap2\n      pop\n        /* \"#utility.yul\":1499:1519   */\n      tag_102\n        /* \"#utility.yul\":1517:1518   */\n      dup4\n        /* \"#utility.yul\":1499:1519   */\n      tag_73\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":1494:1519   */\n      swap3\n      pop\n        /* \"#utility.yul\":1554:1555   */\n      dup3\n        /* \"#utility.yul\":1551:1552   */\n      dup3\n        /* \"#utility.yul\":1547:1556   */\n      mul\n        /* \"#utility.yul\":1576:1606   */\n      tag_103\n        /* \"#utility.yul\":1594:1605   */\n      dup2\n        /* \"#utility.yul\":1576:1606   */\n      tag_73\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":1565:1606   */\n      swap2\n      pop\n        /* \"#utility.yul\":1755:1756   */\n      dup3\n        /* \"#utility.yul\":1746:1753   */\n      dup3\n        /* \"#utility.yul\":1742:1757   */\n      div\n        /* \"#utility.yul\":1739:1740   */\n      dup5\n        /* \"#utility.yul\":1736:1758   */\n      eq\n        /* \"#utility.yul\":1716:1717   */\n      dup4\n        /* \"#utility.yul\":1709:1718   */\n      iszero\n        /* \"#utility.yul\":1689:1772   */\n      or\n        /* \"#utility.yul\":1666:1805   */\n      tag_104\n      jumpi\n        /* \"#utility.yul\":1785:1803   */\n      tag_105\n      tag_76\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":1666:1805   */\n    tag_104:\n        /* \"#utility.yul\":1450:1812   */\n      pop\n        /* \"#utility.yul\":1402:1812   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220856e0dd3b1535b1617414b65fb3ca40450acc31deeb077a6d18ee1a954298bac64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052600560005560056001556007600255600060035534801561002457600080fd5b50610496806100346000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063a040188511610066578063a040188514610139578063b129842814610157578063b87f328014610175578063c3da42b814610193578063deee4403146101b15761009e565b806303d5a26b146100a35780630dbe671f146100c15780634df7e3d0146100df57806367e06858146100fd5780638a054ac21461011b575b600080fd5b6100ab6101cf565b6040516100b8919061030c565b60405180910390f35b6100c96101ed565b6040516100d6919061030c565b60405180910390f35b6100e76101f3565b6040516100f4919061030c565b60405180910390f35b6101056101f9565b604051610112919061030c565b60405180910390f35b610123610217565b604051610130919061030c565b60405180910390f35b61014161021d565b60405161014e919061030c565b60405180910390f35b61015f61023b565b60405161016c919061030c565b60405180910390f35b61017d610259565b60405161018a919061030c565b60405180910390f35b61019b610277565b6040516101a8919061030c565b60405180910390f35b6101b961027d565b6040516101c6919061030c565b60405180910390f35b60006101e860035460005461029b90919063ffffffff16565b905090565b60005481565b60015481565b60006102126001546000546102b190919063ffffffff16565b905090565b60035481565b60006102366002546000546102c790919063ffffffff16565b905090565b60006102546001546000546102dd90919063ffffffff16565b905090565b60006102726001546000546102c790919063ffffffff16565b905090565b60025481565b600061029660015460005461029b90919063ffffffff16565b905090565b600081836102a99190610385565b905092915050565b600081836102bf91906103b6565b905092915050565b600081836102d591906103ea565b905092915050565b600081836102eb919061041e565b905092915050565b6000819050919050565b610306816102f3565b82525050565b600060208201905061032160008301846102fd565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610390826102f3565b915061039b836102f3565b9250826103ab576103aa610327565b5b828204905092915050565b60006103c1826102f3565b91506103cc836102f3565b92508282019050808211156103e4576103e3610356565b5b92915050565b60006103f5826102f3565b9150610400836102f3565b925082820390508181111561041857610417610356565b5b92915050565b6000610429826102f3565b9150610434836102f3565b9250828202610442816102f3565b9150828204841483151761045957610458610356565b5b509291505056fea2646970667358221220856e0dd3b1535b1617414b65fb3ca40450acc31deeb077a6d18ee1a954298bac64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x5 PUSH1 0x0 SSTORE PUSH1 0x5 PUSH1 0x1 SSTORE PUSH1 0x7 PUSH1 0x2 SSTORE PUSH1 0x0 PUSH1 0x3 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x496 DUP1 PUSH2 0x34 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA0401885 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA0401885 EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0xB1298428 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0xB87F3280 EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0xC3DA42B8 EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0xDEEE4403 EQ PUSH2 0x1B1 JUMPI PUSH2 0x9E JUMP JUMPDEST DUP1 PUSH4 0x3D5A26B EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0xDBE671F EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0x4DF7E3D0 EQ PUSH2 0xDF JUMPI DUP1 PUSH4 0x67E06858 EQ PUSH2 0xFD JUMPI DUP1 PUSH4 0x8A054AC2 EQ PUSH2 0x11B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAB PUSH2 0x1CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0x30C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC9 PUSH2 0x1ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD6 SWAP2 SWAP1 PUSH2 0x30C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE7 PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF4 SWAP2 SWAP1 PUSH2 0x30C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x105 PUSH2 0x1F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x112 SWAP2 SWAP1 PUSH2 0x30C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x123 PUSH2 0x217 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x130 SWAP2 SWAP1 PUSH2 0x30C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x141 PUSH2 0x21D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14E SWAP2 SWAP1 PUSH2 0x30C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15F PUSH2 0x23B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x30C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH2 0x259 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18A SWAP2 SWAP1 PUSH2 0x30C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19B PUSH2 0x277 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x30C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B9 PUSH2 0x27D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x30C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x1E8 PUSH1 0x3 SLOAD PUSH1 0x0 SLOAD PUSH2 0x29B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x212 PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD PUSH2 0x2B1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x236 PUSH1 0x2 SLOAD PUSH1 0x0 SLOAD PUSH2 0x2C7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x254 PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD PUSH2 0x2DD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x272 PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD PUSH2 0x2C7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x296 PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD PUSH2 0x29B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x2A9 SWAP2 SWAP1 PUSH2 0x385 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x2BF SWAP2 SWAP1 PUSH2 0x3B6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0x3EA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x2EB SWAP2 SWAP1 PUSH2 0x41E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x306 DUP2 PUSH2 0x2F3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x321 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2FD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x390 DUP3 PUSH2 0x2F3 JUMP JUMPDEST SWAP2 POP PUSH2 0x39B DUP4 PUSH2 0x2F3 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3AB JUMPI PUSH2 0x3AA PUSH2 0x327 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C1 DUP3 PUSH2 0x2F3 JUMP JUMPDEST SWAP2 POP PUSH2 0x3CC DUP4 PUSH2 0x2F3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x3E4 JUMPI PUSH2 0x3E3 PUSH2 0x356 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F5 DUP3 PUSH2 0x2F3 JUMP JUMPDEST SWAP2 POP PUSH2 0x400 DUP4 PUSH2 0x2F3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x418 JUMPI PUSH2 0x417 PUSH2 0x356 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x429 DUP3 PUSH2 0x2F3 JUMP JUMPDEST SWAP2 POP PUSH2 0x434 DUP4 PUSH2 0x2F3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x442 DUP2 PUSH2 0x2F3 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x459 JUMPI PUSH2 0x458 PUSH2 0x356 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP6 PUSH15 0xDD3B1535B1617414B65FB3CA40450 0xAC 0xC3 SAR 0xEE 0xB0 PUSH24 0xA6D18EE1A954298BAC64736F6C6343000812003300000000 ",
							"sourceMap": "129:652:1:-:0;;;201:1;185:17;;225:1;209:17;;249:1;233:17;;273:1;257:17;;129:652;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@Add_340": {
									"entryPoint": 505,
									"id": 340,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@Div2_395": {
									"entryPoint": 463,
									"id": 395,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@Div_384": {
									"entryPoint": 637,
									"id": 384,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@Mul_373": {
									"entryPoint": 571,
									"id": 373,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@Sub2_362": {
									"entryPoint": 541,
									"id": 362,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@Sub_351": {
									"entryPoint": 601,
									"id": 351,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@a_320": {
									"entryPoint": 493,
									"id": 320,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@add_175": {
									"entryPoint": 689,
									"id": 175,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@b_323": {
									"entryPoint": 499,
									"id": 323,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@c_326": {
									"entryPoint": 631,
									"id": 326,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@d_329": {
									"entryPoint": 535,
									"id": 329,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@div_220": {
									"entryPoint": 667,
									"id": 220,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mul_205": {
									"entryPoint": 733,
									"id": 205,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@sub_190": {
									"entryPoint": 711,
									"id": 190,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 765,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 780,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 950,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 901,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1054,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 1002,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 755,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 854,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 807,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1815:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "73:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:2",
														"type": ""
													}
												],
												"src": "7:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "155:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "165:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "143:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "150:3:2",
														"type": ""
													}
												],
												"src": "90:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "312:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "322:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "345:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "330:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "426:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "358:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "358:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "284:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "296:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "307:4:2",
														"type": ""
													}
												],
												"src": "214:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "470:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "487:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "490:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "480:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "480:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "480:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "584:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "587:4:2",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "577:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "577:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "577:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "608:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "611:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "601:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "601:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "601:15:2"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "442:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "656:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "673:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "676:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "666:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "666:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "666:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "770:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "773:4:2",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "763:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "763:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "763:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "794:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "797:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "787:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "787:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "787:15:2"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "628:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "856:143:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "866:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "889:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "871:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "871:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "866:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "900:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "923:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "905:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "905:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "900:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "947:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "949:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "949:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "949:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "944:1:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "937:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "937:9:2"
															},
															"nodeType": "YulIf",
															"src": "934:35:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "979:14:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "988:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "991:1:2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "984:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "984:9:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "979:1:2"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "845:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "848:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "854:1:2",
														"type": ""
													}
												],
												"src": "814:185:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1049:147:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1059:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1082:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1064:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1064:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "1059:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1093:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1116:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1098:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1098:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "1093:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1127:16:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1138:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1141:1:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1134:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1134:9:2"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "1127:3:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1167:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1169:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1169:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1169:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1159:1:2"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "1162:3:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1156:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1156:10:2"
															},
															"nodeType": "YulIf",
															"src": "1153:36:2"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1036:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1039:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "1045:3:2",
														"type": ""
													}
												],
												"src": "1005:191:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1247:149:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1257:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1280:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1262:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1262:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "1257:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1291:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1314:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1296:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1296:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "1291:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1325:17:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1337:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1340:1:2"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1333:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1333:9:2"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "1325:4:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1367:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1369:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1369:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1369:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "1358:4:2"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1364:1:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1355:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1355:11:2"
															},
															"nodeType": "YulIf",
															"src": "1352:37:2"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1233:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1236:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "1242:4:2",
														"type": ""
													}
												],
												"src": "1202:194:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1450:362:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1460:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1483:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1465:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1465:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "1460:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1494:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1517:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1499:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1499:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "1494:1:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1528:28:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1551:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1554:1:2"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "1547:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1547:9:2"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "1532:11:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1565:41:2",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "1594:11:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1576:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1576:30:2"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "1565:7:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1783:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1785:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1785:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1785:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "1716:1:2"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1709:6:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1709:9:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "1739:1:2"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "1746:7:2"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "1755:1:2"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "1742:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1742:15:2"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "1736:2:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1736:22:2"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "1689:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1689:83:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1669:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1669:113:2"
															},
															"nodeType": "YulIf",
															"src": "1666:139:2"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1433:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1436:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "1442:7:2",
														"type": ""
													}
												],
												"src": "1402:410:2"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061009e5760003560e01c8063a040188511610066578063a040188514610139578063b129842814610157578063b87f328014610175578063c3da42b814610193578063deee4403146101b15761009e565b806303d5a26b146100a35780630dbe671f146100c15780634df7e3d0146100df57806367e06858146100fd5780638a054ac21461011b575b600080fd5b6100ab6101cf565b6040516100b8919061030c565b60405180910390f35b6100c96101ed565b6040516100d6919061030c565b60405180910390f35b6100e76101f3565b6040516100f4919061030c565b60405180910390f35b6101056101f9565b604051610112919061030c565b60405180910390f35b610123610217565b604051610130919061030c565b60405180910390f35b61014161021d565b60405161014e919061030c565b60405180910390f35b61015f61023b565b60405161016c919061030c565b60405180910390f35b61017d610259565b60405161018a919061030c565b60405180910390f35b61019b610277565b6040516101a8919061030c565b60405180910390f35b6101b961027d565b6040516101c6919061030c565b60405180910390f35b60006101e860035460005461029b90919063ffffffff16565b905090565b60005481565b60015481565b60006102126001546000546102b190919063ffffffff16565b905090565b60035481565b60006102366002546000546102c790919063ffffffff16565b905090565b60006102546001546000546102dd90919063ffffffff16565b905090565b60006102726001546000546102c790919063ffffffff16565b905090565b60025481565b600061029660015460005461029b90919063ffffffff16565b905090565b600081836102a99190610385565b905092915050565b600081836102bf91906103b6565b905092915050565b600081836102d591906103ea565b905092915050565b600081836102eb919061041e565b905092915050565b6000819050919050565b610306816102f3565b82525050565b600060208201905061032160008301846102fd565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610390826102f3565b915061039b836102f3565b9250826103ab576103aa610327565b5b828204905092915050565b60006103c1826102f3565b91506103cc836102f3565b92508282019050808211156103e4576103e3610356565b5b92915050565b60006103f5826102f3565b9150610400836102f3565b925082820390508181111561041857610417610356565b5b92915050565b6000610429826102f3565b9150610434836102f3565b9250828202610442816102f3565b9150828204841483151761045957610458610356565b5b509291505056fea2646970667358221220856e0dd3b1535b1617414b65fb3ca40450acc31deeb077a6d18ee1a954298bac64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA0401885 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA0401885 EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0xB1298428 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0xB87F3280 EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0xC3DA42B8 EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0xDEEE4403 EQ PUSH2 0x1B1 JUMPI PUSH2 0x9E JUMP JUMPDEST DUP1 PUSH4 0x3D5A26B EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0xDBE671F EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0x4DF7E3D0 EQ PUSH2 0xDF JUMPI DUP1 PUSH4 0x67E06858 EQ PUSH2 0xFD JUMPI DUP1 PUSH4 0x8A054AC2 EQ PUSH2 0x11B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAB PUSH2 0x1CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0x30C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC9 PUSH2 0x1ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD6 SWAP2 SWAP1 PUSH2 0x30C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE7 PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF4 SWAP2 SWAP1 PUSH2 0x30C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x105 PUSH2 0x1F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x112 SWAP2 SWAP1 PUSH2 0x30C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x123 PUSH2 0x217 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x130 SWAP2 SWAP1 PUSH2 0x30C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x141 PUSH2 0x21D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14E SWAP2 SWAP1 PUSH2 0x30C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15F PUSH2 0x23B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x30C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH2 0x259 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18A SWAP2 SWAP1 PUSH2 0x30C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19B PUSH2 0x277 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x30C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B9 PUSH2 0x27D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x30C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x1E8 PUSH1 0x3 SLOAD PUSH1 0x0 SLOAD PUSH2 0x29B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x212 PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD PUSH2 0x2B1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x236 PUSH1 0x2 SLOAD PUSH1 0x0 SLOAD PUSH2 0x2C7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x254 PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD PUSH2 0x2DD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x272 PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD PUSH2 0x2C7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x296 PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD PUSH2 0x29B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x2A9 SWAP2 SWAP1 PUSH2 0x385 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x2BF SWAP2 SWAP1 PUSH2 0x3B6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0x3EA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x2EB SWAP2 SWAP1 PUSH2 0x41E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x306 DUP2 PUSH2 0x2F3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x321 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2FD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x390 DUP3 PUSH2 0x2F3 JUMP JUMPDEST SWAP2 POP PUSH2 0x39B DUP4 PUSH2 0x2F3 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3AB JUMPI PUSH2 0x3AA PUSH2 0x327 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C1 DUP3 PUSH2 0x2F3 JUMP JUMPDEST SWAP2 POP PUSH2 0x3CC DUP4 PUSH2 0x2F3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x3E4 JUMPI PUSH2 0x3E3 PUSH2 0x356 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F5 DUP3 PUSH2 0x2F3 JUMP JUMPDEST SWAP2 POP PUSH2 0x400 DUP4 PUSH2 0x2F3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x418 JUMPI PUSH2 0x417 PUSH2 0x356 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x429 DUP3 PUSH2 0x2F3 JUMP JUMPDEST SWAP2 POP PUSH2 0x434 DUP4 PUSH2 0x2F3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x442 DUP2 PUSH2 0x2F3 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x459 JUMPI PUSH2 0x458 PUSH2 0x356 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP6 PUSH15 0xDD3B1535B1617414B65FB3CA40450 0xAC 0xC3 SAR 0xEE 0xB0 PUSH24 0xA6D18EE1A954298BAC64736F6C6343000812003300000000 ",
							"sourceMap": "129:652:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;700:76;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;185:17;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;209;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;283:76;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;257:17;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;450:76;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;534:75;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;367;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;233:17;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;617:75;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;700:76;736:4;760:8;766:1;;760;;:5;;:8;;;;:::i;:::-;753:15;;700:76;:::o;185:17::-;;;;:::o;209:::-;;;;:::o;283:76::-;318:4;342:8;348:1;;342;;:5;;:8;;;;:::i;:::-;335:15;;283:76;:::o;257:17::-;;;;:::o;450:76::-;486:4;510:8;516:1;;510;;:5;;:8;;;;:::i;:::-;503:15;;450:76;:::o;534:75::-;569:4;593:8;599:1;;593;;:5;;:8;;;;:::i;:::-;586:15;;534:75;:::o;367:::-;402:4;426:8;432:1;;426;;:5;;:8;;;;:::i;:::-;419:15;;367:75;:::o;233:17::-;;;;:::o;617:75::-;652:4;676:8;682:1;;676;;:5;;:8;;;;:::i;:::-;669:15;;617:75;:::o;3850:96:0:-;3908:7;3938:1;3934;:5;;;;:::i;:::-;3927:12;;3850:96;;;;:::o;2755:::-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;3122:::-;3180:7;3210:1;3206;:5;;;;:::i;:::-;3199:12;;3122:96;;;;:::o;3465:::-;3523:7;3553:1;3549;:5;;;;:::i;:::-;3542:12;;3465:96;;;;:::o;7:77:2:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:180::-;490:77;487:1;480:88;587:4;584:1;577:15;611:4;608:1;601:15;628:180;676:77;673:1;666:88;773:4;770:1;763:15;797:4;794:1;787:15;814:185;854:1;871:20;889:1;871:20;:::i;:::-;866:25;;905:20;923:1;905:20;:::i;:::-;900:25;;944:1;934:35;;949:18;;:::i;:::-;934:35;991:1;988;984:9;979:14;;814:185;;;;:::o;1005:191::-;1045:3;1064:20;1082:1;1064:20;:::i;:::-;1059:25;;1098:20;1116:1;1098:20;:::i;:::-;1093:25;;1141:1;1138;1134:9;1127:16;;1162:3;1159:1;1156:10;1153:36;;;1169:18;;:::i;:::-;1153:36;1005:191;;;;:::o;1202:194::-;1242:4;1262:20;1280:1;1262:20;:::i;:::-;1257:25;;1296:20;1314:1;1296:20;:::i;:::-;1291:25;;1340:1;1337;1333:9;1325:17;;1364:1;1358:4;1355:11;1352:37;;;1369:18;;:::i;:::-;1352:37;1202:194;;;;:::o;1402:410::-;1442:7;1465:20;1483:1;1465:20;:::i;:::-;1460:25;;1499:20;1517:1;1499:20;:::i;:::-;1494:25;;1554:1;1551;1547:9;1576:30;1594:11;1576:30;:::i;:::-;1565:41;;1755:1;1746:7;1742:15;1739:1;1736:22;1716:1;1709:9;1689:83;1666:139;;1785:18;;:::i;:::-;1666:139;1450:362;1402:410;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "234800",
								"executionCost": "71599",
								"totalCost": "306399"
							},
							"external": {
								"Add()": "infinite",
								"Div()": "infinite",
								"Div2()": "infinite",
								"Mul()": "infinite",
								"Sub()": "infinite",
								"Sub2()": "infinite",
								"a()": "2452",
								"b()": "2474",
								"c()": "2495",
								"d()": "2518"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 129,
									"end": 781,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 129,
									"end": 781,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 129,
									"end": 781,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 201,
									"end": 202,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 185,
									"end": 202,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 185,
									"end": 202,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 225,
									"end": 226,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 209,
									"end": 226,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 209,
									"end": 226,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 249,
									"end": 250,
									"name": "PUSH",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 233,
									"end": 250,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 233,
									"end": 250,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 273,
									"end": 274,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 257,
									"end": 274,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 257,
									"end": 274,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 129,
									"end": 781,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 129,
									"end": 781,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 129,
									"end": 781,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 129,
									"end": 781,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 129,
									"end": 781,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 129,
									"end": 781,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 781,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 129,
									"end": 781,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 129,
									"end": 781,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 129,
									"end": 781,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 129,
									"end": 781,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 129,
									"end": 781,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 129,
									"end": 781,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 129,
									"end": 781,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 129,
									"end": 781,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 781,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 129,
									"end": 781,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 781,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220856e0dd3b1535b1617414b65fb3ca40450acc31deeb077a6d18ee1a954298bac64736f6c63430008120033",
									".code": [
										{
											"begin": 129,
											"end": 781,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 129,
											"end": 781,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 129,
											"end": 781,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 129,
											"end": 781,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 129,
											"end": 781,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 129,
											"end": 781,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 129,
											"end": 781,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 129,
											"end": 781,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 129,
											"end": 781,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 129,
											"end": 781,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 129,
											"end": 781,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 129,
											"end": 781,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 129,
											"end": 781,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 129,
											"end": 781,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 129,
											"end": 781,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 129,
											"end": 781,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 129,
											"end": 781,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 129,
											"end": 781,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 129,
											"end": 781,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 129,
											"end": 781,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 129,
											"end": 781,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 129,
											"end": 781,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 129,
											"end": 781,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 129,
											"end": 781,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 129,
											"end": 781,
											"name": "PUSH",
											"source": 1,
											"value": "A0401885"
										},
										{
											"begin": 129,
											"end": 781,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 129,
											"end": 781,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 129,
											"end": 781,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 129,
											"end": 781,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 129,
											"end": 781,
											"name": "PUSH",
											"source": 1,
											"value": "A0401885"
										},
										{
											"begin": 129,
											"end": 781,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 129,
											"end": 781,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 129,
											"end": 781,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 129,
											"end": 781,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 129,
											"end": 781,
											"name": "PUSH",
											"source": 1,
											"value": "B1298428"
										},
										{
											"begin": 129,
											"end": 781,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 129,
											"end": 781,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 129,
											"end": 781,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 129,
											"end": 781,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 129,
											"end": 781,
											"name": "PUSH",
											"source": 1,
											"value": "B87F3280"
										},
										{
											"begin": 129,
											"end": 781,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 129,
											"end": 781,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 129,
											"end": 781,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 129,
											"end": 781,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 129,
											"end": 781,
											"name": "PUSH",
											"source": 1,
											"value": "C3DA42B8"
										},
										{
											"begin": 129,
											"end": 781,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 129,
											"end": 781,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 129,
											"end": 781,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 129,
											"end": 781,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 129,
											"end": 781,
											"name": "PUSH",
											"source": 1,
											"value": "DEEE4403"
										},
										{
											"begin": 129,
											"end": 781,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 129,
											"end": 781,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 129,
											"end": 781,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 129,
											"end": 781,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 129,
											"end": 781,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 129,
											"end": 781,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 129,
											"end": 781,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 129,
											"end": 781,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 129,
											"end": 781,
											"name": "PUSH",
											"source": 1,
											"value": "3D5A26B"
										},
										{
											"begin": 129,
											"end": 781,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 129,
											"end": 781,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 129,
											"end": 781,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 129,
											"end": 781,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 129,
											"end": 781,
											"name": "PUSH",
											"source": 1,
											"value": "DBE671F"
										},
										{
											"begin": 129,
											"end": 781,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 129,
											"end": 781,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 129,
											"end": 781,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 129,
											"end": 781,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 129,
											"end": 781,
											"name": "PUSH",
											"source": 1,
											"value": "4DF7E3D0"
										},
										{
											"begin": 129,
											"end": 781,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 129,
											"end": 781,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 129,
											"end": 781,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 129,
											"end": 781,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 129,
											"end": 781,
											"name": "PUSH",
											"source": 1,
											"value": "67E06858"
										},
										{
											"begin": 129,
											"end": 781,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 129,
											"end": 781,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 129,
											"end": 781,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 129,
											"end": 781,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 129,
											"end": 781,
											"name": "PUSH",
											"source": 1,
											"value": "8A054AC2"
										},
										{
											"begin": 129,
											"end": 781,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 129,
											"end": 781,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 129,
											"end": 781,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 129,
											"end": 781,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 129,
											"end": 781,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 129,
											"end": 781,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 129,
											"end": 781,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 129,
											"end": 781,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 700,
											"end": 776,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 700,
											"end": 776,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 700,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 700,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 700,
											"end": 776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 700,
											"end": 776,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 700,
											"end": 776,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 700,
											"end": 776,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 700,
											"end": 776,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 700,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 700,
											"end": 776,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 700,
											"end": 776,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 700,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 700,
											"end": 776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 700,
											"end": 776,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 700,
											"end": 776,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 700,
											"end": 776,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 700,
											"end": 776,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 700,
											"end": 776,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 700,
											"end": 776,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 700,
											"end": 776,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 700,
											"end": 776,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 700,
											"end": 776,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 185,
											"end": 202,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 185,
											"end": 202,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 185,
											"end": 202,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 185,
											"end": 202,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 185,
											"end": 202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 185,
											"end": 202,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 185,
											"end": 202,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 185,
											"end": 202,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 185,
											"end": 202,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 185,
											"end": 202,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 185,
											"end": 202,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 185,
											"end": 202,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 185,
											"end": 202,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 185,
											"end": 202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 185,
											"end": 202,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 185,
											"end": 202,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 185,
											"end": 202,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 185,
											"end": 202,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 185,
											"end": 202,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 185,
											"end": 202,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 185,
											"end": 202,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 185,
											"end": 202,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 185,
											"end": 202,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 209,
											"end": 226,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 209,
											"end": 226,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 209,
											"end": 226,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 209,
											"end": 226,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 209,
											"end": 226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 209,
											"end": 226,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 209,
											"end": 226,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 209,
											"end": 226,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 209,
											"end": 226,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 209,
											"end": 226,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 209,
											"end": 226,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 209,
											"end": 226,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 209,
											"end": 226,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 209,
											"end": 226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 209,
											"end": 226,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 209,
											"end": 226,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 209,
											"end": 226,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 209,
											"end": 226,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 209,
											"end": 226,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 209,
											"end": 226,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 209,
											"end": 226,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 209,
											"end": 226,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 209,
											"end": 226,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 283,
											"end": 359,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 283,
											"end": 359,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 283,
											"end": 359,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 283,
											"end": 359,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 283,
											"end": 359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 283,
											"end": 359,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 283,
											"end": 359,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 283,
											"end": 359,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 283,
											"end": 359,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 283,
											"end": 359,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 283,
											"end": 359,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 283,
											"end": 359,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 283,
											"end": 359,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 283,
											"end": 359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 283,
											"end": 359,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 283,
											"end": 359,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 283,
											"end": 359,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 283,
											"end": 359,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 283,
											"end": 359,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 283,
											"end": 359,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 283,
											"end": 359,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 283,
											"end": 359,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 283,
											"end": 359,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 257,
											"end": 274,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 257,
											"end": 274,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 257,
											"end": 274,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 257,
											"end": 274,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 257,
											"end": 274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 257,
											"end": 274,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 257,
											"end": 274,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 257,
											"end": 274,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 257,
											"end": 274,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 257,
											"end": 274,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 257,
											"end": 274,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 257,
											"end": 274,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 257,
											"end": 274,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 257,
											"end": 274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 257,
											"end": 274,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 257,
											"end": 274,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 257,
											"end": 274,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 257,
											"end": 274,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 257,
											"end": 274,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 257,
											"end": 274,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 257,
											"end": 274,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 257,
											"end": 274,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 257,
											"end": 274,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 450,
											"end": 526,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 450,
											"end": 526,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 450,
											"end": 526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 450,
											"end": 526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 450,
											"end": 526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 450,
											"end": 526,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 450,
											"end": 526,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 450,
											"end": 526,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 450,
											"end": 526,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 450,
											"end": 526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 450,
											"end": 526,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 450,
											"end": 526,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 450,
											"end": 526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 450,
											"end": 526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 450,
											"end": 526,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 450,
											"end": 526,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 450,
											"end": 526,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 450,
											"end": 526,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 450,
											"end": 526,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 450,
											"end": 526,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 450,
											"end": 526,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 450,
											"end": 526,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 450,
											"end": 526,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 534,
											"end": 609,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 534,
											"end": 609,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 534,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 534,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 534,
											"end": 609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 534,
											"end": 609,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 534,
											"end": 609,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 534,
											"end": 609,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 534,
											"end": 609,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 534,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 534,
											"end": 609,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 534,
											"end": 609,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 534,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 534,
											"end": 609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 534,
											"end": 609,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 534,
											"end": 609,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 534,
											"end": 609,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 534,
											"end": 609,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 534,
											"end": 609,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 534,
											"end": 609,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 534,
											"end": 609,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 534,
											"end": 609,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 534,
											"end": 609,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 367,
											"end": 442,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 367,
											"end": 442,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 367,
											"end": 442,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 367,
											"end": 442,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 367,
											"end": 442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 367,
											"end": 442,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 367,
											"end": 442,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 367,
											"end": 442,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 367,
											"end": 442,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 367,
											"end": 442,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 367,
											"end": 442,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 367,
											"end": 442,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 367,
											"end": 442,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 367,
											"end": 442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 367,
											"end": 442,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 367,
											"end": 442,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 367,
											"end": 442,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 367,
											"end": 442,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 367,
											"end": 442,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 367,
											"end": 442,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 367,
											"end": 442,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 367,
											"end": 442,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 367,
											"end": 442,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 233,
											"end": 250,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 233,
											"end": 250,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 233,
											"end": 250,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 233,
											"end": 250,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 233,
											"end": 250,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 233,
											"end": 250,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 233,
											"end": 250,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 250,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 233,
											"end": 250,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 233,
											"end": 250,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 233,
											"end": 250,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 233,
											"end": 250,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 233,
											"end": 250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 233,
											"end": 250,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 233,
											"end": 250,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 233,
											"end": 250,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 250,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 233,
											"end": 250,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 233,
											"end": 250,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 233,
											"end": 250,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 233,
											"end": 250,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 233,
											"end": 250,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 617,
											"end": 692,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 617,
											"end": 692,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 617,
											"end": 692,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 617,
											"end": 692,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 617,
											"end": 692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 617,
											"end": 692,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 617,
											"end": 692,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 617,
											"end": 692,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 617,
											"end": 692,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 617,
											"end": 692,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 617,
											"end": 692,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 617,
											"end": 692,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 617,
											"end": 692,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 617,
											"end": 692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 617,
											"end": 692,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 617,
											"end": 692,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 617,
											"end": 692,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 617,
											"end": 692,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 617,
											"end": 692,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 617,
											"end": 692,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 617,
											"end": 692,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 617,
											"end": 692,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 617,
											"end": 692,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 700,
											"end": 776,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 700,
											"end": 776,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 736,
											"end": 740,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 760,
											"end": 768,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 766,
											"end": 767,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 766,
											"end": 767,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 760,
											"end": 761,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 760,
											"end": 761,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 760,
											"end": 765,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 760,
											"end": 765,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 760,
											"end": 768,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 760,
											"end": 768,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 760,
											"end": 768,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 760,
											"end": 768,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 760,
											"end": 768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 760,
											"end": 768,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 760,
											"end": 768,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 753,
											"end": 768,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 753,
											"end": 768,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 700,
											"end": 776,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 700,
											"end": 776,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 185,
											"end": 202,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 185,
											"end": 202,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 185,
											"end": 202,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 185,
											"end": 202,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 185,
											"end": 202,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 185,
											"end": 202,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 209,
											"end": 226,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 209,
											"end": 226,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 209,
											"end": 226,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 209,
											"end": 226,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 209,
											"end": 226,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 209,
											"end": 226,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 283,
											"end": 359,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 283,
											"end": 359,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 318,
											"end": 322,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 342,
											"end": 350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 348,
											"end": 349,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 348,
											"end": 349,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 342,
											"end": 343,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 342,
											"end": 343,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 342,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 342,
											"end": 347,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 342,
											"end": 350,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 342,
											"end": 350,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 342,
											"end": 350,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 342,
											"end": 350,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 342,
											"end": 350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 342,
											"end": 350,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 342,
											"end": 350,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 335,
											"end": 350,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 335,
											"end": 350,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 283,
											"end": 359,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 283,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 257,
											"end": 274,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 257,
											"end": 274,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 257,
											"end": 274,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 257,
											"end": 274,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 257,
											"end": 274,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 257,
											"end": 274,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 450,
											"end": 526,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 450,
											"end": 526,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 486,
											"end": 490,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 510,
											"end": 518,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 516,
											"end": 517,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 516,
											"end": 517,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 510,
											"end": 511,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 510,
											"end": 511,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 510,
											"end": 515,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 510,
											"end": 515,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 510,
											"end": 518,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 510,
											"end": 518,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 510,
											"end": 518,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 510,
											"end": 518,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 510,
											"end": 518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 510,
											"end": 518,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 510,
											"end": 518,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 503,
											"end": 518,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 503,
											"end": 518,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 450,
											"end": 526,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 450,
											"end": 526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 534,
											"end": 609,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 534,
											"end": 609,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 569,
											"end": 573,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 593,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 599,
											"end": 600,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 593,
											"end": 594,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 593,
											"end": 594,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 593,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 593,
											"end": 598,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 593,
											"end": 601,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 593,
											"end": 601,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 593,
											"end": 601,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 593,
											"end": 601,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 593,
											"end": 601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 593,
											"end": 601,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 593,
											"end": 601,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 586,
											"end": 601,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 586,
											"end": 601,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 534,
											"end": 609,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 534,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 367,
											"end": 442,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 367,
											"end": 442,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 402,
											"end": 406,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 426,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 432,
											"end": 433,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 432,
											"end": 433,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 426,
											"end": 431,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 426,
											"end": 431,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 426,
											"end": 434,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 426,
											"end": 434,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 426,
											"end": 434,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 426,
											"end": 434,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 426,
											"end": 434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 426,
											"end": 434,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 426,
											"end": 434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 419,
											"end": 434,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 419,
											"end": 434,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 367,
											"end": 442,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 367,
											"end": 442,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 233,
											"end": 250,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 250,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 233,
											"end": 250,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 233,
											"end": 250,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 233,
											"end": 250,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 233,
											"end": 250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 617,
											"end": 692,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 617,
											"end": 692,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 652,
											"end": 656,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 676,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 682,
											"end": 683,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 682,
											"end": 683,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 676,
											"end": 677,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 676,
											"end": 677,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 676,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 676,
											"end": 681,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 676,
											"end": 684,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 676,
											"end": 684,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 676,
											"end": 684,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 676,
											"end": 684,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 676,
											"end": 684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 676,
											"end": 684,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 676,
											"end": 684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 669,
											"end": 684,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 669,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 617,
											"end": 692,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 617,
											"end": 692,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3908,
											"end": 3915,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3938,
											"end": 3939,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3934,
											"end": 3935,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 3934,
											"end": 3939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3850,
											"end": 3946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2839,
											"end": 2844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2755,
											"end": 2851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3180,
											"end": 3187,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3210,
											"end": 3211,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 3206,
											"end": 3211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3122,
											"end": 3218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3523,
											"end": 3530,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3553,
											"end": 3554,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 3549,
											"end": 3554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3465,
											"end": 3561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 442,
											"end": 622,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 442,
											"end": 622,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 490,
											"end": 567,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 487,
											"end": 488,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 480,
											"end": 568,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 587,
											"end": 591,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 584,
											"end": 585,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 577,
											"end": 592,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 611,
											"end": 615,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 608,
											"end": 609,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 601,
											"end": 616,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 628,
											"end": 808,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 628,
											"end": 808,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 676,
											"end": 753,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 673,
											"end": 674,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 666,
											"end": 754,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 773,
											"end": 777,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 770,
											"end": 771,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 763,
											"end": 778,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 797,
											"end": 801,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 794,
											"end": 795,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 787,
											"end": 802,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 814,
											"end": 999,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 814,
											"end": 999,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 854,
											"end": 855,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 871,
											"end": 891,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 889,
											"end": 890,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 871,
											"end": 891,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 871,
											"end": 891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 871,
											"end": 891,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 871,
											"end": 891,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 866,
											"end": 891,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 866,
											"end": 891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 905,
											"end": 925,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 923,
											"end": 924,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 905,
											"end": 925,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 905,
											"end": 925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 905,
											"end": 925,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 905,
											"end": 925,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 900,
											"end": 925,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 900,
											"end": 925,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 944,
											"end": 945,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 934,
											"end": 969,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 934,
											"end": 969,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 949,
											"end": 967,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 949,
											"end": 967,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 949,
											"end": 967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 949,
											"end": 967,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 949,
											"end": 967,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 934,
											"end": 969,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 934,
											"end": 969,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 991,
											"end": 992,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 988,
											"end": 989,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 984,
											"end": 993,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 979,
											"end": 993,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 979,
											"end": 993,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 814,
											"end": 999,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 814,
											"end": 999,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 814,
											"end": 999,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 814,
											"end": 999,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 814,
											"end": 999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1005,
											"end": 1196,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1005,
											"end": 1196,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1045,
											"end": 1048,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1064,
											"end": 1084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1082,
											"end": 1083,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1064,
											"end": 1084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1064,
											"end": 1084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1064,
											"end": 1084,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1064,
											"end": 1084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1059,
											"end": 1084,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1059,
											"end": 1084,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1118,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1116,
											"end": 1117,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1118,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1098,
											"end": 1118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1118,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1098,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1093,
											"end": 1118,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1093,
											"end": 1118,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1141,
											"end": 1142,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1138,
											"end": 1139,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1134,
											"end": 1143,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1127,
											"end": 1143,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1127,
											"end": 1143,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1165,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1159,
											"end": 1160,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1156,
											"end": 1166,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1189,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1153,
											"end": 1189,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1169,
											"end": 1187,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1169,
											"end": 1187,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1169,
											"end": 1187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1169,
											"end": 1187,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1169,
											"end": 1187,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1189,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1153,
											"end": 1189,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1005,
											"end": 1196,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1005,
											"end": 1196,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1005,
											"end": 1196,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1005,
											"end": 1196,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1005,
											"end": 1196,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1396,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1202,
											"end": 1396,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1246,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1262,
											"end": 1282,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 1280,
											"end": 1281,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1262,
											"end": 1282,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1262,
											"end": 1282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1262,
											"end": 1282,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 1262,
											"end": 1282,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1282,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1282,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1296,
											"end": 1316,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1314,
											"end": 1315,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1296,
											"end": 1316,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1296,
											"end": 1316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1296,
											"end": 1316,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1296,
											"end": 1316,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1291,
											"end": 1316,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1291,
											"end": 1316,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1340,
											"end": 1341,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1337,
											"end": 1338,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1333,
											"end": 1342,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1325,
											"end": 1342,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1325,
											"end": 1342,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1364,
											"end": 1365,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1358,
											"end": 1362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1355,
											"end": 1366,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1352,
											"end": 1389,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1352,
											"end": 1389,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 1352,
											"end": 1389,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1369,
											"end": 1387,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 1369,
											"end": 1387,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1369,
											"end": 1387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1369,
											"end": 1387,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 1369,
											"end": 1387,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1352,
											"end": 1389,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 1352,
											"end": 1389,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1396,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1396,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1396,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1396,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1396,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1402,
											"end": 1812,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1402,
											"end": 1812,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1442,
											"end": 1449,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1465,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 1483,
											"end": 1484,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1465,
											"end": 1485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1485,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 1465,
											"end": 1485,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1460,
											"end": 1485,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1460,
											"end": 1485,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1499,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 1517,
											"end": 1518,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1499,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1499,
											"end": 1519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1499,
											"end": 1519,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 1499,
											"end": 1519,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1494,
											"end": 1519,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1494,
											"end": 1519,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1554,
											"end": 1555,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1551,
											"end": 1552,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1547,
											"end": 1556,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1576,
											"end": 1606,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 1594,
											"end": 1605,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1576,
											"end": 1606,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1576,
											"end": 1606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1576,
											"end": 1606,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 1576,
											"end": 1606,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1565,
											"end": 1606,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1565,
											"end": 1606,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1755,
											"end": 1756,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1753,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1742,
											"end": 1757,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1739,
											"end": 1740,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1736,
											"end": 1758,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1709,
											"end": 1718,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1689,
											"end": 1772,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1666,
											"end": 1805,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 1666,
											"end": 1805,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 1803,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 1785,
											"end": 1803,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1785,
											"end": 1803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 1803,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 1785,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1666,
											"end": 1805,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 1666,
											"end": 1805,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1450,
											"end": 1812,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1402,
											"end": 1812,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1402,
											"end": 1812,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1402,
											"end": 1812,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1402,
											"end": 1812,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1402,
											"end": 1812,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"solidity-study-main/4.example/erc721/safeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"Add()": "67e06858",
							"Div()": "deee4403",
							"Div2()": "03d5a26b",
							"Mul()": "b1298428",
							"Sub()": "b87f3280",
							"Sub2()": "a0401885",
							"a()": "0dbe671f",
							"b()": "4df7e3d0",
							"c()": "c3da42b8",
							"d()": "8a054ac2"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Add\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Div\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Div2\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Mul\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Sub\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Sub2\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"a\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"b\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"c\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"d\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"solidity-study-main/4.example/erc721/safeMath.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"solidity-study-main/4.example/erc721/safeMath.sol\":{\"keccak256\":\"0xe956b44eca5d4cabcbce46a3c627224ee0c798329aeb7b9dad866c3d254926e2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7703fb917cf819ae092fd26af91b294853b53a882c9b9cb8d8189a9e56d512f7\",\"dweb:/ipfs/QmPAobGZUd5B5bsBMAsd4wSDiJFfb4nwFWrkQTYTs1g5SK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 320,
								"contract": "solidity-study-main/4.example/erc721/safeMath.sol:Math",
								"label": "a",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 323,
								"contract": "solidity-study-main/4.example/erc721/safeMath.sol:Math",
								"label": "b",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 326,
								"contract": "solidity-study-main/4.example/erc721/safeMath.sol:Math",
								"label": "c",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 329,
								"contract": "solidity-study-main/4.example/erc721/safeMath.sol:Math",
								"label": "d",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							311
						]
					},
					"id": 312,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 311,
							"linearizedBaseContracts": [
								311
							],
							"name": "SafeMath",
							"nameLocation": "490:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 33,
										"nodeType": "Block",
										"src": "717:140:0",
										"statements": [
											{
												"id": 32,
												"nodeType": "UncheckedBlock",
												"src": "727:124:0",
												"statements": [
													{
														"assignments": [
															15
														],
														"declarations": [
															{
																"constant": false,
																"id": 15,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 32,
																"src": "751:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 14,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 19,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 16,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "763:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 17,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "767:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 22,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 20,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 15,
																"src": "786:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 21,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "790:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 27,
														"nodeType": "IfStatement",
														"src": "782:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 23,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 24,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 25,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 13,
															"id": 26,
															"nodeType": "Return",
															"src": "793:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 28,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 29,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "838:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 30,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 13,
														"id": 31,
														"nodeType": "Return",
														"src": "824:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 34,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "657:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "668:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "702:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 9,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "708:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:0"
									},
									"scope": 311,
									"src": "641:216:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "1078:113:0",
										"statements": [
											{
												"id": 60,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 48,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 46,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 39,
																"src": "1116:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 47,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 37,
																"src": "1120:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 53,
														"nodeType": "IfStatement",
														"src": "1112:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 49,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 50,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 51,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 45,
															"id": 52,
															"nodeType": "Return",
															"src": "1123:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 54,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 57,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 55,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 37,
																		"src": "1168:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 56,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 39,
																		"src": "1172:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 58,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 45,
														"id": 59,
														"nodeType": "Return",
														"src": "1154:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:0",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1018:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1029:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1063:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1069:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:0"
									},
									"scope": 311,
									"src": "1002:189:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "1415:417:0",
										"statements": [
											{
												"id": 102,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 74,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1683:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 81,
														"nodeType": "IfStatement",
														"src": "1679:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 77,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 79,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 80,
															"nodeType": "Return",
															"src": "1691:16:0"
														}
													},
													{
														"assignments": [
															83
														],
														"declarations": [
															{
																"constant": false,
																"id": 83,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 102,
																"src": "1721:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 82,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 87,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 86,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 84,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1733:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 85,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1737:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 92,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 90,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 88,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1756:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 89,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 65,
																	"src": "1760:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 91,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1765:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 97,
														"nodeType": "IfStatement",
														"src": "1752:33:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 93,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 94,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 95,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 96,
															"nodeType": "Return",
															"src": "1768:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 98,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 99,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1813:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 100,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 73,
														"id": 101,
														"nodeType": "Return",
														"src": "1799:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1355:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1366:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 66,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:0"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1400:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1406:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:0"
									},
									"scope": 311,
									"src": "1339:493:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 131,
										"nodeType": "Block",
										"src": "2057:114:0",
										"statements": [
											{
												"id": 130,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 116,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 109,
																"src": "2095:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 123,
														"nodeType": "IfStatement",
														"src": "2091:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 121,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 115,
															"id": 122,
															"nodeType": "Return",
															"src": "2103:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 125,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 107,
																		"src": "2148:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 126,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 109,
																		"src": "2152:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 128,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 115,
														"id": 129,
														"nodeType": "Return",
														"src": "2134:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "1997:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2008:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2042:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 111,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2048:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:0"
									},
									"scope": 311,
									"src": "1981:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 159,
										"nodeType": "Block",
										"src": "2406:114:0",
										"statements": [
											{
												"id": 158,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 144,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 137,
																"src": "2444:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 151,
														"nodeType": "IfStatement",
														"src": "2440:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 148,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 149,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 143,
															"id": 150,
															"nodeType": "Return",
															"src": "2452:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 152,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 153,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 135,
																		"src": "2497:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 154,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 137,
																		"src": "2501:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 156,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 143,
														"id": 157,
														"nodeType": "Return",
														"src": "2483:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2346:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2357:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2391:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 139,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2397:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:0"
									},
									"scope": 311,
									"src": "2330:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "2822:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 170,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "2839:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 171,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "2843:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 169,
												"id": 173,
												"nodeType": "Return",
												"src": "2832:12:0"
											}
										]
									},
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2768:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2779:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2813:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:0"
									},
									"scope": 311,
									"src": "2755:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "3189:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 185,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 178,
														"src": "3206:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 186,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 180,
														"src": "3210:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 184,
												"id": 188,
												"nodeType": "Return",
												"src": "3199:12:0"
											}
										]
									},
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3135:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3146:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:0"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3180:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:0"
									},
									"scope": 311,
									"src": "3122:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 204,
										"nodeType": "Block",
										"src": "3532:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 200,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3549:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 201,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "3553:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 199,
												"id": 203,
												"nodeType": "Return",
												"src": "3542:12:0"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3478:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3489:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:0"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3523:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:0"
									},
									"scope": 311,
									"src": "3465:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 219,
										"nodeType": "Block",
										"src": "3917:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 215,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "3934:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 216,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 210,
														"src": "3938:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 214,
												"id": 218,
												"nodeType": "Return",
												"src": "3927:12:0"
											}
										]
									},
									"documentation": {
										"id": 206,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3863:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3874:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:0"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3908:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:0"
									},
									"scope": 311,
									"src": "3850:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 234,
										"nodeType": "Block",
										"src": "4466:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 230,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 223,
														"src": "4483:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 231,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 225,
														"src": "4487:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 229,
												"id": 233,
												"nodeType": "Return",
												"src": "4476:12:0"
											}
										]
									},
									"documentation": {
										"id": 221,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4412:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4423:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:0"
									},
									"returnParameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4457:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:0"
									},
									"scope": 311,
									"src": "4399:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 259,
										"nodeType": "Block",
										"src": "5054:106:0",
										"statements": [
											{
												"id": 258,
												"nodeType": "UncheckedBlock",
												"src": "5064:90:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 248,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 240,
																		"src": "5096:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 249,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 238,
																		"src": "5101:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5096:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 251,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 242,
																	"src": "5104:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 247,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5088:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5088:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 253,
														"nodeType": "ExpressionStatement",
														"src": "5088:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 254,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 238,
																"src": "5138:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 255,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 240,
																"src": "5142:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5138:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 246,
														"id": 257,
														"nodeType": "Return",
														"src": "5131:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4980:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "4972:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4972:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4991:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "4983:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4983:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5008:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "4994:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 241,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4994:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:50:0"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5045:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5045:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5044:9:0"
									},
									"scope": 311,
									"src": "4959:201:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 284,
										"nodeType": "Block",
										"src": "5739:105:0",
										"statements": [
											{
												"id": 283,
												"nodeType": "UncheckedBlock",
												"src": "5749:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 273,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 265,
																		"src": "5781:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5785:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5781:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 276,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 267,
																	"src": "5788:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 272,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5773:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5773:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 278,
														"nodeType": "ExpressionStatement",
														"src": "5773:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 279,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 263,
																"src": "5822:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 280,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 265,
																"src": "5826:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5822:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 271,
														"id": 282,
														"nodeType": "Return",
														"src": "5815:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "5166:473:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5653:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5665:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5657:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5657:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5676:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5668:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5693:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5679:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 266,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5679:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5656:50:0"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5730:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5730:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5729:9:0"
									},
									"scope": 311,
									"src": "5644:200:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "6585:105:0",
										"statements": [
											{
												"id": 308,
												"nodeType": "UncheckedBlock",
												"src": "6595:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 298,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 290,
																		"src": "6627:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6631:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6627:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 301,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 292,
																	"src": "6634:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 297,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6619:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6619:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 303,
														"nodeType": "ExpressionStatement",
														"src": "6619:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 304,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 288,
																"src": "6668:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 305,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 290,
																"src": "6672:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6668:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 296,
														"id": 307,
														"nodeType": "Return",
														"src": "6661:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "5850:635:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6499:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6511:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6503:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6503:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6522:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6514:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6514:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6539:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6525:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 291,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6502:50:0"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6576:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6576:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6575:9:0"
									},
									"scope": 311,
									"src": "6490:200:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 312,
							"src": "482:6210:0",
							"usedErrors": []
						}
					],
					"src": "107:6586:0"
				},
				"id": 0
			},
			"solidity-study-main/4.example/erc721/safeMath.sol": {
				"ast": {
					"absolutePath": "solidity-study-main/4.example/erc721/safeMath.sol",
					"exportedSymbols": {
						"Math": [
							396
						],
						"SafeMath": [
							311
						]
					},
					"id": 397,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 313,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 314,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 397,
							"sourceUnit": 312,
							"src": "68:57:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 396,
							"linearizedBaseContracts": [
								396
							],
							"name": "Math",
							"nameLocation": "138:4:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 317,
									"libraryName": {
										"id": 315,
										"name": "SafeMath",
										"nameLocations": [
											"156:8:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 311,
										"src": "156:8:1"
									},
									"nodeType": "UsingForDirective",
									"src": "150:27:1",
									"typeName": {
										"id": 316,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "169:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "0dbe671f",
									"id": 320,
									"mutability": "mutable",
									"name": "a",
									"nameLocation": "197:1:1",
									"nodeType": "VariableDeclaration",
									"scope": 396,
									"src": "185:17:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 318,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "185:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "35",
										"id": 319,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "201:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5_by_1",
											"typeString": "int_const 5"
										},
										"value": "5"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4df7e3d0",
									"id": 323,
									"mutability": "mutable",
									"name": "b",
									"nameLocation": "221:1:1",
									"nodeType": "VariableDeclaration",
									"scope": 396,
									"src": "209:17:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 321,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "209:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "35",
										"id": 322,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "225:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5_by_1",
											"typeString": "int_const 5"
										},
										"value": "5"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c3da42b8",
									"id": 326,
									"mutability": "mutable",
									"name": "c",
									"nameLocation": "245:1:1",
									"nodeType": "VariableDeclaration",
									"scope": 396,
									"src": "233:17:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 324,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "233:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "37",
										"id": 325,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "249:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_7_by_1",
											"typeString": "int_const 7"
										},
										"value": "7"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8a054ac2",
									"id": 329,
									"mutability": "mutable",
									"name": "d",
									"nameLocation": "269:1:1",
									"nodeType": "VariableDeclaration",
									"scope": 396,
									"src": "257:17:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 327,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "257:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 328,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "273:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 339,
										"nodeType": "Block",
										"src": "324:35:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 336,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 323,
															"src": "348:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 334,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 320,
															"src": "342:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 335,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "344:3:1",
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 175,
														"src": "342:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "342:8:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 333,
												"id": 338,
												"nodeType": "Return",
												"src": "335:15:1"
											}
										]
									},
									"functionSelector": "67e06858",
									"id": 340,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "Add",
									"nameLocation": "292:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "295:2:1"
									},
									"returnParameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "318:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 331,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "318:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "317:6:1"
									},
									"scope": 396,
									"src": "283:76:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 350,
										"nodeType": "Block",
										"src": "408:34:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 347,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 323,
															"src": "432:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 345,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 320,
															"src": "426:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 346,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "428:3:1",
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 190,
														"src": "426:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "426:8:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 344,
												"id": 349,
												"nodeType": "Return",
												"src": "419:15:1"
											}
										]
									},
									"functionSelector": "b87f3280",
									"id": 351,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "Sub",
									"nameLocation": "376:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "379:2:1"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "402:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 342,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "402:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "401:6:1"
									},
									"scope": 396,
									"src": "367:75:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 361,
										"nodeType": "Block",
										"src": "492:34:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 358,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 326,
															"src": "516:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 356,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 320,
															"src": "510:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 357,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "512:3:1",
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 190,
														"src": "510:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "510:8:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 355,
												"id": 360,
												"nodeType": "Return",
												"src": "503:15:1"
											}
										]
									},
									"functionSelector": "a0401885",
									"id": 362,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "Sub2",
									"nameLocation": "459:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "463:2:1"
									},
									"returnParameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "486:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 353,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "486:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "485:6:1"
									},
									"scope": 396,
									"src": "450:76:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 372,
										"nodeType": "Block",
										"src": "575:34:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 369,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 323,
															"src": "599:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 367,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 320,
															"src": "593:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 368,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "595:3:1",
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 205,
														"src": "593:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "593:8:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 366,
												"id": 371,
												"nodeType": "Return",
												"src": "586:15:1"
											}
										]
									},
									"functionSelector": "b1298428",
									"id": 373,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "Mul",
									"nameLocation": "543:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "546:2:1"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "569:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 364,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "569:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "568:6:1"
									},
									"scope": 396,
									"src": "534:75:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 383,
										"nodeType": "Block",
										"src": "658:34:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 380,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 323,
															"src": "682:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 378,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 320,
															"src": "676:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 379,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "678:3:1",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 220,
														"src": "676:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "676:8:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 377,
												"id": 382,
												"nodeType": "Return",
												"src": "669:15:1"
											}
										]
									},
									"functionSelector": "deee4403",
									"id": 384,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "Div",
									"nameLocation": "626:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "629:2:1"
									},
									"returnParameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "652:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 375,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "652:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:6:1"
									},
									"scope": 396,
									"src": "617:75:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 394,
										"nodeType": "Block",
										"src": "742:34:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 391,
															"name": "d",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 329,
															"src": "766:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 389,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 320,
															"src": "760:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 390,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "762:3:1",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 220,
														"src": "760:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "760:8:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 388,
												"id": 393,
												"nodeType": "Return",
												"src": "753:15:1"
											}
										]
									},
									"functionSelector": "03d5a26b",
									"id": 395,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "Div2",
									"nameLocation": "709:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "713:2:1"
									},
									"returnParameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "736:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 386,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "736:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "735:6:1"
									},
									"scope": 396,
									"src": "700:76:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 397,
							"src": "129:652:1",
							"usedErrors": []
						}
					],
					"src": "33:748:1"
				},
				"id": 1
			}
		}
	}
}